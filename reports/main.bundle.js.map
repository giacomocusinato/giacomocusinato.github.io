{"version":3,"sources":["webpack:///./src/app/dashboard/login/login.component.ts","webpack:///./src/app/dashboard/pages/activities/activities.component.ts","webpack:///./src/app/dashboard/pages/activities/calendar/calendar.component.ts","webpack:///./src/app/dashboard/pages/insert/insert.component.ts","webpack:///./src/app/dashboard/pages/jobs/jobs.component.ts","webpack:///./src/app/dashboard/pages/jobs/tasks/tasks.component.ts","webpack:///./src/app/dashboard/pages/subjects/subject-edit/subject-edit.component.ts","webpack:///./src/app/dashboard/pages/subjects/subjects.component.ts","webpack:///./src/app/dashboard/pages/types/types.component.ts","webpack:///./src/app/dashboard/shared/model/site.ts","webpack:///./src/app/dashboard/shared/services/http/index.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/dashboard.routing.ts","webpack:///./src/app/dashboard/pages/activities/calendar/date-formatter.provider.ts","webpack:///./src/app/dashboard/pages/pages.module.ts","webpack:///./src/app/dashboard/pages/subject-filter.pipe.ts","webpack:///./src/app/dashboard/pages/subjects/subject-form/subject-form.component.ts","webpack:///./src/app/dashboard/pages/subjects/subject-form/translate-site-type.pipe.ts","webpack:///./src/app/dashboard/pages/subjects/translate-subject-type.pipe.ts","webpack:///./src/app/dashboard/pages/types/translate-job-element.pipe.ts","webpack:///./src/app/dashboard/shared/model/activity-type.ts","webpack:///./src/app/dashboard/shared/model/activity.ts","webpack:///./src/app/dashboard/shared/model/job-type.ts","webpack:///./src/app/dashboard/shared/model/job.ts","webpack:///./src/app/dashboard/shared/model/model.module.ts","webpack:///./src/app/dashboard/shared/model/subject.ts","webpack:///./src/app/dashboard/shared/model/task-type.ts","webpack:///./src/app/dashboard/shared/model/task.ts","webpack:///./src/app/dashboard/shared/services/error.service.ts","webpack:///./src/app/dashboard/shared/services/http/activity-type.service.ts","webpack:///./src/app/dashboard/shared/services/http/activity.service.ts","webpack:///./src/app/dashboard/shared/services/http/http.module.ts","webpack:///./src/app/dashboard/shared/services/http/job-type.service.ts","webpack:///./src/app/dashboard/shared/services/http/job.service.ts","webpack:///./src/app/dashboard/shared/services/http/login.service.ts","webpack:///./src/app/dashboard/shared/services/http/subject.service.ts","webpack:///./src/app/dashboard/shared/services/http/task-type.service.ts","webpack:///./src/app/dashboard/shared/services/services.module.ts","webpack:///./src/app/dashboard/shared/services/http/http-base.service.ts","webpack:///./src/app/dashboard/shared/services/toast.service.ts","webpack:///./src/app/dashboard/shared/services/token.service.ts","webpack:///./src/app/dashboard/shared/shared.module.ts","webpack:///./src/app/dashboard/shared/sidebar/sidebar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/dashboard/shared/model/base.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/login/login.component.html","webpack:///./src/app/dashboard/pages/activities/activities.component.html","webpack:///./src/app/dashboard/pages/activities/calendar/calendar.component.html","webpack:///./src/app/dashboard/pages/insert/insert.component.html","webpack:///./src/app/dashboard/pages/jobs/jobs.component.html","webpack:///./src/app/dashboard/pages/jobs/tasks/tasks.component.html","webpack:///./src/app/dashboard/pages/subjects/subject-edit/subject-edit.component.html","webpack:///./src/app/dashboard/pages/subjects/subject-form/subject-form.component.html","webpack:///./src/app/dashboard/pages/subjects/subjects.component.html","webpack:///./src/app/dashboard/pages/types/types.component.html","webpack:///./src/app/dashboard/shared/sidebar/sidebar.component.html","webpack:///./src/app/dashboard/shared/services/index.ts","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/shared/sidebar-toggle.service.ts","webpack:///./src/app/dashboard/shared/model/index.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {\n  LoginService,\n  ToastService\n} from '../shared/services/';\n\n@Component({\n  selector: 'rep-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n  private inputType: string = 'password';\n  private username: string;\n  private password: string;\n\n  constructor(\n    private loginService: LoginService,\n    private toastService: ToastService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.router.navigate(['']);\n  }\n\n  toggleInputType() {\n    this.inputType == 'password' ?\n      this.inputType = 'text' :\n      this.inputType = 'password';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/login/login.component.ts","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CalendarComponent } from './calendar/calendar.component';\n\nimport {\n  Subject,\n  Activity,\n  ActivityType,\n  Job,\n  Task\n} from '../../shared/model';\n\nimport {\n  SubjectService,\n  ActivityService,\n  ActivityTypeService,\n  JobService,\n  ErrorService,\n  ToastService\n} from '../../shared/services';\n\n@Component({\n  selector: 'rep-activities',\n  templateUrl: './activities.component.html'\n})\nexport class ActivitiesComponent implements OnInit {\n  @ViewChild(CalendarComponent)\n  private calendar: CalendarComponent;\n  private selectedDay: Date;\n  private selectedMonth: Date;\n\n  private activities: Activity[];\n\n  private subjects: Subject[];\n  private jobs: Job[] = [];\n  private selectedEmployee: Subject = new Subject();\n  private selectedClient: Subject = new Subject();\n  private selectedJob: Job = new Job();\n  private selectedTask: Task;\n  private selectedSubtask: Task;\n  private activityTypes: ActivityType[] = [];\n  private newActivity: Activity = this.emptyActivity();\n\n  constructor(\n    private subjectService: SubjectService,\n    private activityService: ActivityService,\n    private jobService: JobService,\n    private activityTypeService: ActivityTypeService,\n    private toastService: ToastService,\n    private errors: ErrorService\n  ) { }\n\n  ngOnInit() {\n    this.subjectService.getSubjects().subscribe(\n      data => {\n        this.subjects = data;\n        this.selectedEmployee = this.subjects[0];\n        this.newActivity.EmployeeId = this.selectedEmployee.Id;\n        this.getActivities();\n      },\n      error => console.log(error)\n    );\n    this.activityTypeService.getActivityTypes().subscribe(\n      data => this.activityTypes = data,\n      error => console.log(error)\n    );\n    this.jobService.getJobs().subscribe(\n      data => this.jobs = data,\n      error => console.log(error)\n    );\n\n    this.errors.reset();\n  }\n\n  employeeChanged(subject: Subject) {\n    this.selectedEmployee = subject;\n    this.newActivity.EmployeeId = subject.Id;\n    this.getActivities();\n  }\n\n  clientChanged(client: Subject) {\n    this.getJobs(client.Id);\n    this.selectedTask = undefined;\n    this.selectedSubtask = undefined;\n  }\n\n  jobChanged(job: Job) {\n    this.newActivity.ParentId = job.Id;\n    this.selectedTask = undefined;\n    this.selectedSubtask = undefined;\n  }\n\n  taskChanged(task: Task) {\n    this.newActivity.ParentId =\n      !!task.Id ? task.Id : this.selectedJob.Id;\n    this.selectedSubtask = undefined;\n  }\n\n  subtaskChanged(task: Task) {\n    this.newActivity.ParentId =\n      !!task.Id ? task.Id : this.selectedTask.Id;\n  }\n\n  activityTypeChanged(activityType: ActivityType) {\n    if (!this.newActivity.Description)\n      this.newActivity.Description = activityType.Name;\n  }\n\n\n  dayChanged(day: Date) {\n    this.selectedDay = day;\n    this.newActivity.Date = day;\n  }\n\n  monthChanged(month: Date) {\n    this.selectedMonth = month;\n    this.getActivities();\n  }\n\n  createActivityClick() {\n    console.log(this.newActivity);\n    if (!this.newActivity.Description || !this.newActivity.WorkedHours) {\n      this.errors.forms.createActivity.emptyFields = true;\n    } else {\n      this.activityService.createActivity(this.newActivity).subscribe(\n        data => {\n          console.log(data);\n          this.activities.push(data);\n          this.calendar.generateEvents(this.activities);\n          this.errors.forms.createActivity.emptyFields = false;\n          this.toastService.activityCreated(true);\n        },\n        error => {\n          this.errors.forms.createActivity.emptyFields = false;\n          this.toastService.activityCreated(false);\n        }\n      );\n    }\n  }\n\n  deleteActivityClick(activity: Activity, index: number) {\n    this.activityService.deleteActivity(activity).subscribe(\n      () => {\n        this.activities.splice(index, 1);\n        this.toastService.activityDeleted(true);\n        this.calendar.generateEvents(this.activities);\n      },\n      error => this.toastService.activityDeleted(false)\n    );\n  }\n\n  isSelectedDay(isoDate: string) {\n    let date = new Date(isoDate);\n    return this.selectedDay.toDateString() == date.toDateString();\n  }\n\n  emptyActivities() {\n    let date = this.selectedDay;\n    return this.activities.filter(\n      function(entry) {\n        return date.toDateString() == new Date(entry.Date).toDateString();\n      }\n    ).length == 0;\n  }\n\n  private emptyActivity(): Activity {\n    let activity = new Activity();\n    activity.TypeId = 'board_machine';\n    activity.EmployeeId = this.selectedEmployee.Id;\n\n    return activity;\n  }\n\n  private getActivities() {\n    let date: Date = this.selectedMonth ? this.selectedMonth : new Date();\n    this.activityService.getFlatActivitiesByMonth(this.selectedEmployee, date).subscribe(\n      data => {\n        this.activities = data;\n        this.calendar.generateEvents(this.activities);\n      },\n      error => console.log(error)\n    );\n  }\n\n  private getJobs(clientId: string) {\n    this.jobService.getJobs(clientId).subscribe(\n      data => {\n        this.jobs = data;\n        this.selectedJob = this.jobs[0];\n        this.jobChanged(this.selectedJob);\n      },\n      error => console.log(error)\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/activities/activities.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Subject as RxSubject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nimport {\n  CalendarMonthViewDay,\n  CalendarDateFormatter,\n  CalendarEvent,\n} from 'angular-calendar';\n\nimport { subMonths, addMonths } from 'date-fns';\nimport { DateFormatter } from './date-formatter.provider';\n\nimport { Activity, Subject } from '../../../shared/model';\n\n@Component({\n  selector: 'rep-calendar',\n  templateUrl: './calendar.component.html',\n  providers: [{\n    provide: CalendarDateFormatter,\n    useClass: DateFormatter\n  }]\n})\nexport class CalendarComponent implements OnInit {\n  private view: string = 'month';\n  private viewDate: Date = new Date(2017, 7, 7);\n  private selectedDay: CalendarMonthViewDay;\n  private locale: string = 'it';\n  private weekStartsOn: number = 1;\n  private refresh: RxSubject<any> = new RxSubject();\n  private events: any[];\n  @Output() private dayChanged: EventEmitter<Date> = new EventEmitter<Date>();\n  @Output() private monthChanged: EventEmitter<Date> = new EventEmitter<Date>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes) {\n  }\n\n  dayClicked(day: CalendarMonthViewDay): void {\n    if (this.selectedDay) {\n      delete this.selectedDay.cssClass;\n    }\n    day.cssClass = 'cal-day-selected';\n    this.selectedDay = day;\n    this.dayChanged.emit(day.date);\n  }\n\n  incrementMonth(): void {\n    this.viewDate = addMonths(this.viewDate, 1);\n    this.monthChanged.emit(this.viewDate);\n    this.refresh.next();\n  }\n\n  decrementMonth(): void {\n    this.viewDate = subMonths(this.viewDate, 1);\n    this.monthChanged.emit(this.viewDate);\n    this.refresh.next();\n  }\n\n  addBadgeTotal(day: CalendarMonthViewDay): void {\n  }\n\n  generateEvents(activities: Activity[]) {\n    this.events = [];\n\n    for (let activity of activities) {\n      for (let hours = 0; hours < activity.WorkedHours; ++hours) {\n        this.events.push({\n          title: activity.Description,\n          start: new Date(activity.Date),\n          color: ''\n        });\n      }\n    }\n    this.refresh.next();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/activities/calendar/calendar.component.ts","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport {\n  Subject,\n  Activity,\n  Job,\n  Task,\n  ActivityType\n} from '../../shared/model';\n\nimport {\n  SubjectService,\n  ActivityService,\n  JobService,\n  ActivityTypeService,\n  ErrorService,\n  ToastService\n} from '../../shared/services';\n\n@Component({\n  selector: 'rep-insert',\n  templateUrl: './insert.component.html'\n})\nexport class InsertComponent implements OnInit {\n  @ViewChild('firstInput') private firstInput : ElementRef;\n\n  private activities: Activity[] = [];\n  private subjects: Subject[];\n  private jobs: Job[];\n  private activityTypes: ActivityType[];\n  private dateTyped: string;\n  private selectedEmployee: Subject = new Subject();\n  private selectedClient: Subject = new Subject();\n  private selectedJob: Job = new Job();\n  private selectedTask: Task;\n  private selectedSubtask: Task;\n  private selectedActivityType : ActivityType = new ActivityType();\n  private newActivity: Activity = this.emptyActivity();\n\n\n  constructor(\n    private subjectService: SubjectService,\n    private jobService: JobService,\n    private activityService: ActivityService,\n    private activityTypeService: ActivityTypeService,\n    private toastService: ToastService,\n    private errors: ErrorService,\n  ) { }\n\n  ngOnInit() {\n    this.subjectService.getSubjects().subscribe(\n      data => {\n        this.subjects = data;\n        this.selectedEmployee = this.subjects[0];\n        this.selectedClient = this.subjects[0];\n        this.newActivity.EmployeeId = this.selectedEmployee.Id;\n        this.getActivities(this.selectedEmployee);\n        console.log(this.selectedEmployee);\n      },\n      error => console.log(error)\n    );\n\n    this.activityTypeService.getActivityTypes().subscribe(\n      data => this.activityTypes = data,\n      error => console.log(error)\n    );\n  }\n\n  dateChanged(date) {\n    this.newActivity.Date = new Date(date);\n\n    // let day = date.substr(0, 2);\n    // let month = date.substr(2, 2);\n    // let year = '20' + date.substr(4, 2);\n    //\n    // if (date.length == 4) {\n    //   year = new Date().getFullYear().toString();\n    // } else if (date.length != 6) {\n    //   this.newActivity.Date = undefined;\n    //   return;\n    // }\n    //\n    // this.newActivity.Date = new Date(`${day}-${month}-${year}`);\n    //\n    // if (this.newActivity.Date == undefined) {\n    //   return;\n    // }\n  }\n\n\n  clientChanged(client: Subject) {\n    this.getJobs(client.Id);\n    this.selectedTask = undefined;\n    this.selectedSubtask = undefined;\n  }\n\n  jobChanged(job: Job) {\n    this.newActivity.ParentId = job.Id;\n    this.selectedTask = undefined;\n    this.selectedSubtask = undefined;\n  }\n\n  taskChanged(task: Task) {\n    this.newActivity.ParentId =\n      !!task.Id ? task.Id : this.selectedJob.Id;\n    this.selectedSubtask = undefined;\n  }\n\n  subtaskChanged(task: Task) {\n    this.newActivity.ParentId =\n      !!task.Id ? task.Id : this.selectedTask.Id;\n  }\n\n  activityTypeChanged(activityType: ActivityType) {\n    this.newActivity.TypeId = activityType.Id;\n    this.newActivity.Description = activityType.Name;\n  }\n\n  createActivityClick() {\n    this.foucusFirstInput();\n\n    if (\n      !this.newActivity.TypeId ||\n      !this.newActivity.WorkedHours ||\n      !this.newActivity.EmployeeId ||\n      !this.newActivity.ParentId ||\n      !this.newActivity.Date\n    ) {\n      this.errors.forms.createActivity.emptyFields = true;\n    } else {\n      this.activityService.createActivity(this.newActivity).subscribe(\n        data => {\n          this.activities.push(data);\n          this.errors.forms.createActivity.emptyFields = false;\n          this.toastService.activityCreated(true);\n        },\n        error => {\n          this.errors.forms.createActivity.emptyFields = false;\n          this.toastService.activityCreated(false);\n        }\n      );\n    }\n  }\n\n  createActivityTab(event) {\n    event.preventDefault();\n    this.foucusFirstInput();\n  }\n\n  private foucusFirstInput() {\n    this.firstInput.nativeElement.focus();\n  }\n\n  private getJobs(clientId: string) {\n    this.jobService.getJobs(clientId).subscribe(\n      data => {\n        this.jobs = data;\n        this.selectedJob = this.jobs[0];\n        this.jobChanged(this.selectedJob);\n      },\n      error => console.log(error)\n    );\n  }\n\n  private emptyActivity(): Activity {\n    let activity = new Activity();\n    activity.TypeId = 'board_machine';\n    activity.EmployeeId = this.selectedEmployee.Id;\n    // TODO: handle parent task\n    return activity;\n  }\n\n  private getActivities(employee: Subject, month: Date = null) {\n    if (month == null) {\n      month = new Date();\n    }\n    this.activityService.getFlatActivitiesByMonth(employee, month).subscribe(\n      data => {\n        this.activities = data;\n      },\n      error => console.log(error)\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/insert/insert.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject, Job, JobType } from '../../shared/model';\nimport {\n  SubjectService,\n  JobService,\n  JobTypeService,\n  ToastService,\n  ErrorService\n} from '../../shared/services';\n\n@Component({\n  selector: 'rep-jobs',\n  templateUrl: './jobs.component.html'\n})\nexport class JobsComponent implements OnInit {\n  private subjects: Subject[];\n  private selectedClient: Subject = new Subject();\n  private jobs: Job[];\n  private jobTypes: JobType[];\n  private newJob: Job = new Job();\n\n  constructor(\n    private subjectService: SubjectService,\n    private jobService: JobService,\n    private jobTypeService: JobTypeService,\n    private toastService: ToastService,\n    private router: Router,\n    private errors: ErrorService\n  ) { }\n\n  ngOnInit() {\n    this.subjectService.getSubjects().subscribe(\n      data => {\n        this.subjects = data;\n        this.selectedClient = data.find(s => s.Types.indexOf('client') > -1);\n        this.newJob = this.emptyJob();\n        this.getJobs(this.selectedClient.Id);\n      },\n      error => console.log(error)\n    );\n\n    this.jobTypeService.getJobTypes().subscribe(\n      data => {\n        this.jobTypes = data;\n      },\n      error => console.log(error)\n    );\n\n    // this.jobService.printJob() {\n    //\n    // }\n\n    this.errors.reset();\n  }\n\n  createJobClick() {\n    if (!!this.newJob.Code) {\n      this.jobService.createJob(this.newJob).subscribe(\n        data => {\n          this.jobs.push(data);\n          this.newJob = this.emptyJob();\n          this.toastService.jobCreated(true);\n          this.errors.forms.createJob.codeRequired = false;\n        },\n        error => this.toastService.jobCreated(false)\n      );\n    } else {\n      this.errors.forms.createJob.codeRequired = true;\n      this.toastService.taskCreated(false);\n    }\n  }\n\n  clientChanged(subject: Subject) {\n    this.selectedClient = subject;\n    this.newJob = this.emptyJob();\n    this.getJobs(this.selectedClient.Id);\n  }\n\n  goToEditJob(job: Job) {\n    this.jobService.jobToEdit = job;\n    this.router.navigate(['jobs', job.Code]);\n  }\n\n  isEmployer(subject: Subject) {\n    return subject.Types.indexOf('client') != -1 ||\n      subject.Types.indexOf('organization') != -1;\n  }\n\n  private getJobs(clientId) {\n    this.jobService.getJobs(clientId).subscribe(\n      data => this.jobs = data,\n      error => console.log(error)\n    );\n  }\n\n  private emptyJob(): Job {\n    let job = new Job();\n    job.ClientId = this.selectedClient.Id;\n    return job;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/jobs/jobs.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Job, Task, Subject, JobType, TaskType } from '../../../shared/model';\n\nimport {\n  SubjectService,\n  JobService,\n  JobTypeService,\n  TaskTypeService,\n  ErrorService,\n  ToastService\n} from '../../../shared/services';\n\n@Component({\n  selector: 'rep-tasks',\n  templateUrl: './tasks.component.html'\n})\nexport class TasksComponent implements OnInit {\n  private job: Job;\n  private subjects: Subject[];\n  private jobTypes: JobType[];\n  private taskTypes: TaskType[];\n  private newTask: Task = new Task();\n  private editTaskIndex: number;\n  private editTaskOpen: boolean = false;\n  private editSubtaskIndex: number = -1;\n\n  constructor(\n    private subjectService: SubjectService,\n    private jobService: JobService,\n    private jobTypeService: JobTypeService,\n    private taskTypeService: TaskTypeService,\n    private toastService: ToastService,\n    private errors: ErrorService,\n    private router: Router,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    if (this.jobService.jobToEdit == undefined) {\n      this.job = new Job();\n      this.router.navigate(['jobs']);\n    } else {\n      this.job = this.jobService.jobToEdit;\n\n      this.subjectService.getSubjects().subscribe(\n        data => this.subjects = data,\n        error => console.log(error)\n      );\n      this.jobTypeService.getJobTypes().subscribe(\n        data => this.jobTypes = data,\n        error => console.log(error)\n      );\n      this.taskTypeService.getTaskTypes().subscribe(\n        data => this.taskTypes = data,\n        error => console.log(error)\n      );\n\n      this.errors.reset();\n    }\n  }\n\n  updateJobClick() {\n    if (!!this.job.Code) {\n      this.jobService.updateJob(this.job).subscribe(\n        data => {\n          this.toastService.jobUpdated(true)\n          this.editSubtaskIndex = -1;\n        },\n        error => this.toastService.jobUpdated(false)\n      );\n\n      this.errors.forms.updateJob.codeRequired = false;\n    } else {\n      this.errors.forms.updateJob.codeRequired = true;\n    }\n  }\n\n  deleteJobClick() {\n    this.jobService.deleteJob(this.job).subscribe(\n      () => {\n        this.toastService.jobDeleted(true);\n        this.goBack();\n      },\n      error => this.toastService.jobDeleted(false)\n    );\n  }\n\n  createTaskClick() {\n    if (!!this.newTask.Code) {\n      this.job.Tasks.push(this.newTask);\n      this.newTask = new Task();\n      this.errors.forms.createTask.codeRequired = false;\n    } else {\n      this.errors.forms.createTask.codeRequired = true;\n    }\n  }\n\n  deleteTaskClick(task: Task) {\n    task.IsDeleted = true;\n  }\n\n  deleteSubtaskClick(subtask: Task) {\n    subtask.IsDeleted = true;\n  }\n\n  addSubtaskClick() {\n    // TODO: check if existing sites are filled before creating a new openedSite\n    if (!this.job.Tasks[this.editTaskIndex].Subtasks)\n      this.job.Tasks[this.editTaskIndex].Subtasks = [];\n\n    this.job.Tasks[this.editTaskIndex].Subtasks.push(new Task());\n    this.editSubtaskIndex = this.job.Tasks[this.editTaskIndex].Subtasks.length - 1;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/jobs/tasks/tasks.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { Site, Subject } from '../../../shared/model';\nimport { SubjectService } from '../../../shared/services';\n\n@Component({\n  selector: 'rep-subject-edit',\n  templateUrl: './subject-edit.component.html'\n})\nexport class SubjectEditComponent implements OnInit {\n  private subject: Subject;\n\n  constructor(\n    private subjectService: SubjectService,\n    private location: Location,\n    private router: Router\n  ) {\n    // Initialize to avoid error on the view\n    this.subject = new Subject();\n    this.subject.Types = [''];\n  }\n\n  ngOnInit() {\n    if (this.subjectService.subjectToEdit == undefined) {\n      this.router.navigate(['subjects']);\n    } else {\n      this.subject = this.subjectService.subjectToEdit;\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/subjects/subject-edit/subject-edit.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Site, Subject } from '../../shared/model';\nimport { SubjectService } from '../../shared/services';\n\n@Component({\n  selector: 'rep-subjects',\n  templateUrl: './subjects.component.html'\n})\nexport class SubjectsComponent implements OnInit {\n  private selectedType: string = 'employee';\n  private openedSite: number = 0;\n\n  private subjects: Subject[];\n  private newSubject: Subject;\n\n  constructor(\n    private subjectService: SubjectService,\n    private router: Router\n  ) {\n    // Initialize newSubject for the form\n    this.newSubject = new Subject();\n  }\n\n  ngOnInit() {\n    this.subjectService.getSubjects().subscribe(\n      data => this.subjects = data,\n      error => console.log(error)\n    );\n  }\n\n  addSiteForm() {\n    if (!this.newSubject.Sites)\n      this.newSubject.Sites = [];\n\n    // TODO: check empty sites creations\n    this.openedSite =\n      this.newSubject.Sites.push(new Site()) - 1;\n\n  }\n\n  goToEditSubject(subject: Subject) {\n    this.subjectService.subjectToEdit = subject;\n    this.router.navigate(['subjects', subject.Id]);\n  }\n\n  subjectCreated(newSubject: Subject) {\n    this.subjects.push(newSubject);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/subjects/subjects.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { JobType, TaskType, ActivityType } from '../../shared/model';\nimport {\n  JobTypeService,\n  TaskTypeService,\n  ActivityTypeService,\n  ToastService,\n  ErrorService\n} from '../../shared/services';\n\n\n@Component({\n  selector: 'rep-types',\n  templateUrl: './types.component.html',\n})\nexport class TypesComponent implements OnInit {\n  private types: any[];\n  private selectedType: string = 'job';\n  private newType: any = new JobType();\n  private editing: boolean = false;\n  private editTypeIndex: number;\n\n  constructor(\n    private jobTypeService: JobTypeService,\n    private taskTypeService: TaskTypeService,\n    private activityTypeService: ActivityTypeService,\n    private toastService: ToastService,\n    private router: Router,\n    private errors: ErrorService\n  ) { }\n\n  ngOnInit() {\n    this.getTypes();\n  }\n\n  elementChanged(jobElement: string) {\n    this.selectedType = jobElement;\n    this.types = [];\n    this.getTypes();\n    this.errors.forms.createType.codeRequired = false;\n  }\n\n  openEditClick(type) {\n    this.editing = true;\n    this.newType = type;\n  }\n\n  noEditClick() {\n    this.editing = false;\n\n    switch (this.selectedType) {\n      case 'job':\n        this.newType = new JobType();\n        break;\n      case 'task':\n        this.newType = new TaskType();\n        break;\n      case 'activity':\n        this.newType = new ActivityType();\n        break;\n    }\n  }\n\n  createTypeClick() {\n    if (this.selectedType != 'activity') {\n      if (!this.newType.Code || !this.newType.Name) {\n        this.errors.forms.createType.codeRequired = true;\n        return;\n      }\n      if (this.selectedType == 'job') {\n        this.jobTypeService.createJobType(this.newType).subscribe(\n          data => {\n            this.newType = new JobType();\n            this.finalizeTypeCreation(data);\n          },\n          error => console.log(error)\n        );\n      } else {\n        this.taskTypeService.createTaskType(this.newType).subscribe(\n          data => {\n            this.newType = new TaskType();\n            this.finalizeTypeCreation(data);\n          },\n          error => console.log(error)\n        );\n      }\n    } else {\n      if (!this.newType.Name) {\n        this.errors.forms.createType.codeRequired = true;\n        return;\n      }\n      this.activityTypeService.createActivityType(this.newType).subscribe(\n        data => {\n          this.newType = new ActivityType();\n          this.finalizeTypeCreation(data);\n        },\n        error => console.log(error)\n      );\n    }\n  }\n\n  editTypeClick() {\n\n    if (this.selectedType != 'activity') {\n      if (!this.newType.Code || !this.newType.Name) {\n        this.errors.forms.createType.codeRequired = true;\n        return;\n      }\n      if (this.selectedType == 'job') {\n        this.jobTypeService.updateJobType(this.newType).subscribe(\n          data => {\n            this.newType = new JobType();\n            this.finalizeTypeUpdate(data);\n          },\n          error => console.log(error)\n        );\n      } else {\n        this.taskTypeService.updateTaskType(this.newType).subscribe(\n          data => {\n            this.newType = new TaskType();\n            this.finalizeTypeUpdate(data);\n          },\n          error => console.log(error)\n        );\n      }\n    } else {\n      if (!this.newType.Name) {\n        this.errors.forms.createType.codeRequired = true;\n        return;\n      }\n      this.activityTypeService.updateActivityType(this.newType).subscribe(\n        data => {\n          this.newType = new ActivityType();\n          this.finalizeTypeUpdate(data);\n        },\n        error => console.log(error)\n      );\n    }\n  }\n\n  deleteTypeClick() {\n    switch (this.selectedType) {\n      case 'job':\n        this.jobTypeService.deleteJobType(this.types[this.editTypeIndex]).subscribe(\n          data => {\n            this.newType = new JobType();\n            this.finalizeTypeDelete();\n          },\n          error => console.log(error)\n        );\n        break;\n      case 'task':\n\n        this.taskTypeService.deleteTaskType(this.types[this.editTypeIndex]).subscribe(\n          data => {\n            this.newType = new TaskType();\n            this.finalizeTypeDelete();\n          },\n          error => console.log(error)\n        );\n        break;\n      case 'activity':\n        this.activityTypeService.deleteActivityType(this.types[this.editTypeIndex]).subscribe(\n          data => {\n            this.newType = new ActivityType();\n            this.finalizeTypeDelete();\n          },\n          error => console.log(error)\n        );\n        break;\n    }\n  }\n\n  private finalizeTypeCreation(data: any) {\n    this.types.push(data);\n    this.toastService.typeCreated(true);\n    this.errors.forms.createType.codeRequired = false;\n  }\n\n  private finalizeTypeUpdate(data: any) {\n    this.toastService.typeUpdated(true);\n    this.errors.forms.createType.codeRequired = false;\n    this.editing = false;\n  }\n\n  private finalizeTypeDelete() {\n    this.types.splice(this.editTypeIndex, 1);\n    this.editing = false;\n    this.toastService.typeDeleted(true);\n  }\n\n  private getTypes() {\n    switch (this.selectedType) {\n      case 'job':\n        this.newType = new JobType();\n        this.jobTypeService.getJobTypes().subscribe(\n          data => {\n            this.types = data;\n          },\n          error => console.log(error)\n        );\n        break;\n      case 'task':\n        this.newType = new TaskType();\n        this.taskTypeService.getTaskTypes().subscribe(\n          data => {\n            this.types = data;\n          },\n          error => console.log(error)\n        );\n        break;\n      case 'activity':\n        this.newType = new ActivityType();\n        this.activityTypeService.getActivityTypes().subscribe(\n          data => {\n            this.types = data;\n          },\n          error => console.log(error)\n        );\n        break;\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/types/types.component.ts","import { Base } from './base';\n\nimport {\n  plainToClass,\n  deserialize,\n  deserializeArray\n} from 'class-transformer';\n\nexport class Site extends Base {\n  SiteName: string;\n  TypesCodes: string[] = [];\n  Address: string;\n  Number: string;\n  City: string;\n  ZipCode: string;\n  Province: string;\n  CountryId: string;\n  IsActive: boolean = true;\n\n  constructor() { super(); }\n\n  public static fromObject(obj) {\n      return plainToClass(Site, obj);\n  }\n\n  public static fromJson(json): Site {\n    return deserialize(Site, json);\n  }\n\n  public static fromJsonArray(json): Site[] {\n    return deserializeArray(Site, json);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/site.ts","export * from './http-base.service';\nexport * from './subject.service';\nexport * from './job.service';\nexport * from './job-type.service';\nexport * from './task-type.service';\nexport * from './activity-type.service';\nexport * from './activity.service';\nexport * from './login.service';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/index.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 263;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 263\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TokenService, SubjectService } from './dashboard/shared/services';\n\n@Component({\n  selector: 'rep-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'rep works!';\n\n  constructor(\n    private tokenService: TokenService,\n    private subjectService: SubjectService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    try {\n      let payload = this.tokenService.getTokenPayload();\n    } catch(e) {\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { AppRoutingModule } from './app.routing';\nimport { ServicesModule } from './dashboard/shared/services/services.module';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    DashboardModule,\n    ServicesModule,\n    AppRoutingModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './dashboard/login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: '',\n    component: DashboardComponent\n  }\n];\n\nexport const AppRoutingModule: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from './shared/shared.module';\nimport { PagesModule } from './pages/pages.module';\nimport { ModelModule } from './shared/model/model.module';\nimport { ServicesModule } from './shared/services/services.module';\nimport { DashboardRoutingModule } from './dashboard.routing';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SimpleNotificationsModule } from 'angular2-notifications';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    SimpleNotificationsModule.forRoot(),\n    PagesModule,\n    ModelModule,\n    RouterModule,\n    DashboardRoutingModule\n  ],\n  declarations: [\n    DashboardComponent,\n    LoginComponent\n  ]\n})\nexport class DashboardModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.module.ts","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { SubjectsComponent } from './pages/subjects/subjects.component'\nimport { SubjectEditComponent } from './pages/subjects/subject-edit/subject-edit.component'\nimport { JobsComponent } from './pages/jobs/jobs.component';\nimport { TasksComponent } from './pages/jobs/tasks/tasks.component';\nimport { ActivitiesComponent } from './pages/activities/activities.component';\nimport { InsertComponent } from './pages/insert/insert.component';\nimport { TypesComponent } from './pages/types/types.component';\n\nconst dashboardRoutes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'subjects',\n        pathMatch: 'full'\n      },\n      {\n        path: 'subjects',\n        component: SubjectsComponent,\n\n      },\n      {\n        path: 'subjects/:name',\n        component: SubjectEditComponent\n      },\n      {\n        path: 'jobs',\n        component: JobsComponent,\n\n      },\n      {\n        path: 'jobs/:code',\n        component: TasksComponent,\n\n      },\n      {\n        path: 'types',\n        component: TypesComponent,\n\n      },\n      {\n        path: 'activities',\n        component: ActivitiesComponent,\n\n      },\n      {\n        path: 'insert',\n        component: InsertComponent,\n\n      },\n    ]\n  },\n];\n\nexport const DashboardRoutingModule: ModuleWithProviders =\n  RouterModule.forChild(dashboardRoutes);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.routing.ts","import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n\nexport class DateFormatter extends CalendarDateFormatter {\n\n  public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {weekday: 'short'}).format(date);\n  }\n\n  public monthViewTitle({date, locale}: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {year: 'numeric', month: 'long'}).format(date);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/activities/calendar/date-formatter.provider.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SimpleNotificationsModule } from 'angular2-notifications';\n\nimport { SubjectsComponent } from './subjects/subjects.component';\nimport { TranslateSubjectTypePipe } from './subjects/translate-subject-type.pipe';\nimport { SubjectEditComponent } from './subjects/subject-edit/subject-edit.component';\nimport { SubjectFormComponent } from './subjects/subject-form/subject-form.component';\nimport { TranslateSiteTypePipe } from './subjects/subject-form/translate-site-type.pipe';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { ActivitiesComponent } from './activities/activities.component';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarComponent } from './activities/calendar/calendar.component';\nimport { SubjectFilterPipe } from './subject-filter.pipe';\nimport { TasksComponent } from './jobs/tasks/tasks.component';\nimport { InsertComponent } from './insert/insert.component';\nimport { TypesComponent } from './types/types.component';\nimport { TranslateJobElementPipe } from './types/translate-job-element.pipe';\nimport { OrderModule } from 'ngx-order-pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    CalendarModule.forRoot(),\n    SimpleNotificationsModule.forRoot(),\n    OrderModule\n  ],\n  declarations: [\n    SubjectsComponent,\n    TranslateSubjectTypePipe,\n    SubjectEditComponent,\n    SubjectFormComponent,\n    TranslateSiteTypePipe,\n    JobsComponent,\n    ActivitiesComponent,\n    CalendarComponent,\n    SubjectFilterPipe,\n    TasksComponent,\n    InsertComponent,\n    TypesComponent,\n    TranslateJobElementPipe\n  ]\n})\nexport class PagesModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/pages.module.ts","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Subject } from '../shared/model';\n\n@Pipe({\n  name: 'subjectFilter',\n  pure: false\n})\nexport class SubjectFilterPipe implements PipeTransform {\n\n  transform(subjects: Subject[], type?: string): Subject[] {\n    if (!subjects) return [];\n    switch(type) {\n      case 'employees': return subjects.filter(subject => this.isEmployee(subject));\n      case 'contractors': return subjects.filter(subject => this.isContractor(subject));\n      case 'clients': return subjects.filter(subject => this.isClient(subject));\n      case 'organizations': return subjects.filter(subject => this.isOrganization(subject));\n      case 'contracting_parties': return subjects.filter(subject => this.isContractingParty(subject));\n      case 'salaried': return subjects.filter(subject => this.isSalaried(subject));\n      case 'employers': return subjects.filter(subject => this.isEmployer(subject));\n      default: return subjects;\n    }\n  }\n\n  isEmployee(subject: Subject) {\n    return subject.Types.indexOf('employee') != -1;\n  }\n\n  isContractor(subject: Subject) {\n    return subject.Types.indexOf('contractor') != -1;\n  }\n\n  isClient(subject: Subject) {\n    return subject.Types.indexOf('client') != -1;\n  }\n\n  isOrganization(subject: Subject) {\n    return subject.Types.indexOf('organization') != -1;\n  }\n\n  isContractingParty(subject: Subject) {\n    return subject.Types.indexOf('contracting_party') != -1;\n  }\n\n  isSalaried(subject: Subject) {\n    return this.isEmployee(subject) || this.isContractor(subject);\n  }\n\n  isEmployer(subject: Subject) {\n    return this.isClient(subject) || this.isOrganization(subject);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/subject-filter.pipe.ts","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { Site, Subject } from '../../../shared/model';\nimport { SubjectService, ToastService } from '../../../shared/services';\n\n@Component({\n  selector: 'rep-subject-form',\n  templateUrl: './subject-form.component.html'\n})\nexport class SubjectFormComponent implements OnInit, OnChanges {\n  @Input() private edit: boolean;\n  @Input() private selectedType: string;\n  @Input() private subject: Subject;\n  @Output() private subjectCreated : EventEmitter <Subject>;\n  @Output() private subjectDeleted : EventEmitter<void>;\n  private subjects: Subject[] = [];\n  private openedSite: number;\n\n  private SITE_TYPES: string[] = ['legal_site', 'logistic_site', 'residence'];\n  private SUBJECT_TYPES: string[] = ['employee', 'contractor', 'contracting_party', 'client'];\n\n  constructor(\n    private subjectService: SubjectService,\n    private toastService: ToastService\n  ) {\n    this.subjectCreated = new EventEmitter<Subject>();\n    this.subjectDeleted = new EventEmitter<void>();\n  }\n\n  ngOnInit() {\n    if (!this.subject) {\n      this.subject = new Subject();\n    }\n\n    this.subjectService.getSubjects().subscribe(\n      data => this.subjects = data,\n      error => console.log(error)\n    );\n  }\n\n  ngOnChanges(changes) {\n    if (!this.edit) {\n      this.manageSubjectTypeChange(changes.selectedType.currentValue,\n        changes.selectedType.previousValue);\n    }\n  }\n\n  employerChanged(employerId: string) {\n    this.subject.EmployerId = employerId;\n  }\n\n  addSiteClick() {\n    // TODO: check if existing sites are filled before creating a new openedSite\n\n    if (!this.subject.Sites) {\n      this.subject.Sites = [];\n    }\n\n    this.openedSite =\n      this.subject.Sites.push(new Site()) - 1;\n  }\n\n  deleteSiteClick(index) {\n    this.subject.Sites.splice(index, 1);\n  }\n\n  createSubjectClick() {\n    this.subjectService.createSubject(this.subject).subscribe(\n      data => {\n        this.subject = new Subject();\n        this.manageSubjectTypeChange(this.selectedType);\n        this.subjectCreated.emit(data);\n        this.toastService.subjectCreated(true);\n      },\n      error => this.toastService.subjectCreated(false)\n    );\n  }\n\n  updateSubjectClick() {\n    this.subjectService.updateSubject(this.subject).subscribe(\n      data => this.toastService.subjectUpdated(true),\n      error => this.toastService.subjectUpdated(false)\n    );\n  }\n\n  deleteSubjectClick() {\n    this.subjectService.deleteSubject(this.subject).subscribe(\n      data => {\n        this.subjectDeleted.emit();\n        this.toastService.subjectDeleted(true);\n      },\n      error => {this.toastService.subjectDeleted(false); console.log(error)}\n    );\n  }\n\n  removeEmptySites() {\n    for (let i in this.subject.Sites) {\n      if (!this.subject.Sites[i].SiteName)\n        this.subject.Sites.splice(parseInt(i), 1);\n    }\n  }\n\n  updateTypesArray(type, array, event) {\n    let index = array.indexOf(type);\n\n    if (event.target.checked && index == -1) {\n      array.push(type);\n    }\n    else if (!event.target.checked && index != -1) {\n      array.splice(index, 1);\n    }\n  }\n\n  manageSubjectTypeChange(currentType, previousType=null) {\n    if (!this.subject) {\n      this.subject = new Subject();\n    }\n\n    if (this.subject.Types.indexOf(currentType) == -1) {\n      this.subject.Types.push(currentType);\n    }\n\n    let previousTypeIndex = this.subject.Types.indexOf(previousType);\n    if (previousTypeIndex != -1) {\n      this.subject.Types.splice(previousTypeIndex, 1);\n    }\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/subjects/subject-form/subject-form.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'translateSiteType'\n})\nexport class TranslateSiteTypePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value == 'legal_site')\n      return 'Sede Legale';\n    else if (value == 'logistic_site')\n      return 'Sede Logistica';\n    return 'Residenza';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/subjects/subject-form/translate-site-type.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'translateSubjectType'\n})\nexport class TranslateSubjectTypePipe implements PipeTransform {\n\n  transform(value: string, args?: any): string {\n    if (value == 'employee')\n      return args==\"plural\" ? 'dipendenti': 'dipendente';\n    else if (value == 'contractor')\n      return args==\"plural\" ? 'terzisti': 'terzista';\n    else if (value == 'client')\n      return args==\"plural\" ? 'clienti': 'cliente';\n    return args==\"plural\" ? 'appaltatori': 'appaltatore';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/subjects/translate-subject-type.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'translateJobElement'\n})\nexport class TranslateJobElementPipe implements PipeTransform {\n\n  transform(value: string, args?: any): string {\n    if (value == 'job')\n      return args==\"plural\" ? 'commesse': 'commessa';\n    else if (value == 'task')\n      return 'task';\n    return 'attività';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/pages/types/translate-job-element.pipe.ts","import { Base } from './base';\n\nimport {\n  plainToClass,\n  deserialize,\n  deserializeArray\n} from 'class-transformer';\n\nexport class ActivityType extends Base {\n  public Id: string;\n  public Name: string;\n\n  constructor() {\n    super();\n  }\n\n  public static fromObject(obj) {\n      return plainToClass(ActivityType, obj);\n  }\n\n  public static fromJson(json): ActivityType {\n    return deserialize(ActivityType, json);\n  }\n\n  public static fromJsonArray(json): ActivityType[] {\n    return deserializeArray(ActivityType, json);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/activity-type.ts","import { Base } from './base';\n\nimport {\n  plainToClass,\n  deserialize,\n  deserializeArray\n} from 'class-transformer';\n\nexport class Activity extends Base {\n  public Id: string;\n  public ParentId: string;\n  public TypeId: string;\n  public Description: string;\n  public EmployeeId: string;\n  public Date: Date;\n  public WorkedHours: number;\n\n  // FlatActivity fields\n  public ClientName: string;\n  public ContractingName: string;\n  public JobCode: string;\n  public JobDescription: string;\n  public TaskCode: string;\n  public TaskDescription: string;\n\n  constructor() {\n    super();\n  }\n\n  public static fromObject(obj) {\n      return plainToClass(Activity, obj);\n  }\n\n  public static fromJson(json): Activity {\n    return deserialize(Activity, json);\n  }\n\n  public static fromJsonArray(json): Activity[] {\n    return deserializeArray(Activity, json);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/activity.ts","import { Base } from '.';\n\nimport {\n  plainToClass,\n  deserialize,\n  deserializeArray\n} from 'class-transformer';\n\nexport class JobType extends Base {\n  public Id: string;\n  public Code: string;\n  public Name: string;\n\n  constructor() {\n    super();\n  }\n\n  public static fromObject(obj) {\n      return plainToClass(JobType, obj);\n  }\n\n  public static fromJson(json): JobType {\n    return deserialize(JobType, json);\n  }\n\n  public static fromJsonArray(json): JobType[] {\n    return deserializeArray(JobType, json);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/job-type.ts","import { Base, Activity, Task } from '.';\n\nimport {\n  Type,\n  plainToClass,\n  deserialize,\n  deserializeArray\n} from 'class-transformer';\n\nexport class Job extends Base {\n  public Id: string;\n  public Code: string;\n  public TypeId: string;\n  public Description: string;\n  public IsActive: boolean = true;\n  public ClientId: string;\n  public ContractingPartyId: string;\n  public EstimatedHours: number;\n  public WorkedHours: number;\n  public InvoicedHours: number;\n  @Type(() => Activity)\n  public Activities: Activity[] = [];\n  @Type(() => Task)\n  public Tasks: Task[] = [];\n\n  constructor() {\n    super();\n  }\n\n  public static fromObject(obj) {\n      return plainToClass(Job, obj);\n  }\n\n  public static fromJson(json): Job {\n    return deserialize(Job, json);\n  }\n\n  public static fromJsonArray(json): Job[] {\n    return deserializeArray(Job, json);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/job.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n  ],\n  exports: [\n  ]\n})\nexport class ModelModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/model.module.ts","import { Base } from './base';\nimport { Site } from './site';\n\nimport {\n  Type,\n  plainToClass,\n  deserialize,\n  deserializeArray\n} from 'class-transformer';\n\nexport class Subject extends Base {\n  public Id: string;\n  public FirstName: string;\n  public LastName: string;\n  public BusinessName: number;\n  public TaxCode: string;\n  public VATNumber: string;\n  public Types: string[] = [];\n  public EmployerId: string;\n  public HourlyRate: number;\n  public IsActive: boolean = true;\n  public CreatedOn: string;\n  public UpdatedOn: string;\n  @Type(() => Site)\n  public Sites: Site[] = [];\n\n  constructor() {\n    super();\n  }\n\n  public static fromObject(obj) {\n      return plainToClass(Subject, obj as Object);\n  }\n\n  public static fromJson(json): Subject {\n    return deserialize(Subject, json);\n  }\n\n  public static fromJsonArray(json): Subject[] {\n    return deserializeArray(Subject, json);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/subject.ts","import { Base } from './';\n\nimport {\n  plainToClass,\n  deserialize,\n  deserializeArray\n} from 'class-transformer';\n\nexport class TaskType extends Base {\n  public Id: string;\n  public Code: string;\n  public Name: string;\n\n  constructor() {\n    super();\n  }\n\n  public static fromObject(obj) {\n      return plainToClass(TaskType, obj);\n  }\n\n  public static fromJson(json): TaskType {\n    return deserialize(TaskType, json);\n  }\n\n  public static fromJsonArray(json): TaskType[] {\n    return deserializeArray(TaskType, json);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/task-type.ts","import { Base, Activity } from '.';\n\nimport {\n  Type,\n  plainToClass,\n  deserialize,\n  deserializeArray\n} from 'class-transformer';\n\nexport class Task extends Base {\n  public Id: string;\n  public Code: string;\n  public TypeId: string;\n  public ParentId: string;\n  public Description: string;\n  public EstimatedHours: number;\n  public WorkedHours: number;\n  public InvoicedHours: number;\n  public IsDeleted : boolean = false;\n  @Type(() => Activity)\n  public Activities : Activity[] = [];\n  @Type(() => Task)\n  public Subtasks: Task[] = [];\n\n  constructor() {\n    super();\n  }\n\n  public static fromObject(obj) {\n      return plainToClass(Task, obj);\n  }\n\n  public static fromJson(json): Task {\n    return deserialize(Task, json);\n  }\n\n  public static fromJsonArray(json): Task[] {\n    return deserializeArray(Task, json);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/task.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ErrorService {\n\n  constructor() { }\n\n  forms: any = {\n    createJob: { codeRequired: false },\n    updateJob: { codeRequired: false },\n    createTask: { codeRequired: false },\n    createActivity: { emptyFields: false },\n    createType: { codeRequired: false },\n    updateType: { codeRequired: false },\n  }\n\n  reset() {\n    for (let form in this.forms) {\n      for (let error in this.forms[form]) {\n        this.forms[form][error] = false;\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/error.service.ts","import { Injectable } from '@angular/core';\nimport { Response, Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { ActivityType } from '../../model';\nimport { HttpBaseService } from './http-base.service';\nimport { TokenService } from '../index';\n\n@Injectable()\nexport class ActivityTypeService extends HttpBaseService {\n\n  private activityTypesUrl: string = this.apiUrl + 'activitytypes/';\n\n  constructor(\n    private http: Http,\n    tokenService: TokenService,\n  ) { super(tokenService) }\n\n\n  getActivityTypes(): Observable<ActivityType[]> {\n    return this.http.get('assets/activitytype.json', this.options)\n      .map((res: Response) => ActivityType.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  updateActivityType(type: ActivityType) {\n    return this.http.put(this.activityTypesUrl, type, this.options)\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  createActivityType(type: ActivityType): Observable<ActivityType> {\n    return this.http.post(this.activityTypesUrl, type, this.options)\n      .map((res: Response) => ActivityType.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  deleteActivityType(type: ActivityType) {\n    return this.http.delete(this.activityTypesUrl + type.Id, this.options)\n      .map((res: Response) => res)\n      .catch((res: Response) => this.handleError(res));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/activity-type.service.ts","import { Injectable } from '@angular/core';\nimport { Response, Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { Activity, ActivityType, Subject } from '../../model';\nimport { HttpBaseService } from './http-base.service';\nimport { TokenService } from '../index';\n\n@Injectable()\nexport class ActivityService extends HttpBaseService {\n  private activityUrl: string = this.apiUrl + 'flatactivities/';\n  private flatActivityUrl: string = this.apiUrl + 'flatactivitiesbymonth/';\n\n  constructor(\n    private http: Http,\n    tokenService: TokenService,\n  ) { super(tokenService) }\n\n  getActivities(employee: Subject, month: Date): Observable<Activity[]> {\n    return this.http.get('assets/activities.json', this.options)\n      .map((res: Response) => Activity.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  updateActivity(activity: Activity) {\n    return this.http.put(this.activityUrl, activity, this.options)\n      .map((res: Response) => res.json())\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  createActivity(activity: Activity): Observable<Activity> {\n    return this.http.post(this.activityUrl, activity, this.options)\n      .map((res: Response) => Activity.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  deleteActivity(activity: Activity) {\n    return this.http.delete(this.activityUrl + activity.Id, this.options)\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  getFlatActivitiesByMonth(employee: Subject, month: Date): Observable<Activity[]> {\n    return this.http.get('assets/activities.json', this.options)\n      .map((res: Response) => Activity.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/activity.service.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  HttpBaseService,\n  SubjectService,\n  JobService,\n  ActivityService,\n  LoginService,\n  JobTypeService,\n  TaskTypeService,\n  ActivityTypeService,\n} from './index';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    HttpBaseService,\n    SubjectService,\n    JobService,\n    ActivityService,\n    LoginService,\n    JobTypeService,\n    TaskTypeService,\n    ActivityTypeService\n  ]\n})\nexport class HttpModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/http.module.ts","import { Injectable } from '@angular/core';\nimport { Response, Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { JobType } from '../../model';\nimport { HttpBaseService } from './http-base.service';\nimport { TokenService } from '../index';\n\n@Injectable()\nexport class JobTypeService extends HttpBaseService {\n\n  private jobTypesUrl: string = this.apiUrl + 'jobtypes/';\n\n  constructor(\n    private http: Http,\n    tokenService: TokenService,\n  ) { super(tokenService) }\n\n\n  getJobTypes(): Observable<JobType[]> {\n    return this.http.get('assets/jobtypes.json', this.options)\n      .map((res: Response) =>  JobType.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  updateJobType(type: JobType) {\n    return this.http.put(this.jobTypesUrl, type, this.options)\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  createJobType(type: JobType): Observable<JobType> {\n    return this.http.post(this.jobTypesUrl, type, this.options)\n      .map((res: Response) => JobType.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  deleteJobType(type: JobType) {\n    return this.http.delete(this.jobTypesUrl + type.Id, this.options)\n      .map((res: Response) => res)\n      .catch((res: Response) => this.handleError(res));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/job-type.service.ts","import { Injectable } from '@angular/core';\nimport { Response, Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { Job } from '../../model';\nimport { HttpBaseService } from './http-base.service';\nimport { TokenService } from '../index';\n\n@Injectable()\nexport class JobService extends HttpBaseService {\n  jobToEdit: Job;\n\n  private jobsUrl: string = this.apiUrl + 'jobs/';\n\n  constructor(\n    private http: Http,\n    tokenService: TokenService,\n  ) { super(tokenService) }\n\n  getJobs(clientId: string = null): Observable<Job[]> {\n    return this.http.get('assets/jobs.json', this.options)\n      .map((res: Response) => Job.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  updateJob(job: Job) {\n    return this.http.put(this.jobsUrl, job, this.options)\n      .map((res: Response) => Job.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  createJob(job: Job): Observable<Job> {\n    return this.http.post(this.jobsUrl, job, this.options)\n      .map((res: Response) => Job.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  deleteJob(job: Job) {\n    return this.http.delete(this.jobsUrl + job.Id, this.options)\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  printJob(job: Job) {\n    return this.http.post(this.jobsUrl, job, this.options)\n      .map((res: Response) => console.log(res))\n      .catch((res: Response) => this.handleError(res));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/job.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { HttpBaseService } from './http-base.service';\nimport { TokenService } from '../index';\n\n\n@Injectable()\nexport class LoginService {\n  private tokenUrl: string;\n  protected options: RequestOptions;\n\n  constructor(\n    private http: Http,\n    private router: Router,\n    private base: HttpBaseService,\n    private tokenService: TokenService\n  ) {\n    this.options = new RequestOptions({\n      headers: this.buildLoginHeaders()\n    });\n\n    this.tokenUrl = base.apiUrl + 'token';\n  }\n\n  login(username: string, password: string): Observable<any> {\n    let body = `username=${username}&password=${password}`;\n    return this.http.post(this.tokenUrl, body, this.options)\n      .map((res: Response) => {\n        \n      });\n  }\n\n  logout() {\n    this.tokenService.removeToken();\n    this.router.navigate(['login']);\n  }\n\n  private buildLoginHeaders(): Headers {\n    let headers: Headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8');\n\n    return headers;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/login.service.ts","import { Injectable } from '@angular/core';\nimport { Response, Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { Subject } from '../../model';\nimport { HttpBaseService } from './http-base.service';\nimport { TokenService } from '../index';\n\n@Injectable()\nexport class SubjectService extends HttpBaseService {\n  subjectToEdit: Subject;\n\n  private subjectsUrl: string = this.apiUrl + 'subjects/';\n\n  constructor(\n    private http: Http,\n    tokenService: TokenService,\n  ) { super(tokenService) }\n\n  getSubject(id: string): Observable<Subject> {\n    return this.http.get('${this.subjectsUrl}/${id}', this.options)\n      .map((res: Response) => Subject.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  getSubjects(): Observable<Subject[]> {\n    return this.http.get('assets/subjects.json', this.options)\n      .map((res: Response) => Subject.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  updateSubject(subject: Subject) {\n    return this.http.put(this.subjectsUrl, subject, this.options)\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  createSubject(subject: Subject): Observable<Subject> {\n    return this.http.post(this.subjectsUrl, subject, this.options)\n      .map((res: Response) => Subject.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  deleteSubject(subject: Subject) {\n    return this.http.delete(this.subjectsUrl + subject.Id, this.options)\n      .map((res: Response) => res)\n      .catch((res: Response) => this.handleError(res));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/subject.service.ts","import { Injectable } from '@angular/core';\nimport { Response, Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { TaskType } from '../../model';\nimport { HttpBaseService } from './http-base.service';\nimport { TokenService } from '../index';\n\n@Injectable()\nexport class TaskTypeService extends HttpBaseService {\n\n  private taskTypesUrl: string = this.apiUrl + 'tasktypes/';\n\n  constructor(\n    private http: Http,\n    tokenService: TokenService,\n  ) { super(tokenService) }\n\n\n  getTaskTypes(): Observable<TaskType[]> {\n    return this.http.get('assets/tasktypes.json', this.options)\n      .map((res: Response) => TaskType.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  updateTaskType(type: TaskType) {\n    return this.http.put(this.taskTypesUrl, type, this.options)\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  createTaskType(type: TaskType): Observable<TaskType> {\n    return this.http.post(this.taskTypesUrl, type, this.options)\n      .map((res: Response) => TaskType.fromObject(res.json()))\n      .catch((res: Response) => this.handleError(res));\n  }\n\n  deleteTaskType(type: TaskType) {\n    return this.http.delete(this.taskTypesUrl + type.Id, this.options)\n      .map((res: Response) => res)\n      .catch((res: Response) => this.handleError(res));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/task-type.service.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from './http/http.module';\nimport {\n  ErrorService,\n  ToastService,\n  TokenService\n} from './index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule\n  ],\n  declarations: [],\n  providers: [\n    ErrorService,\n    ToastService,\n    TokenService\n  ]\n})\nexport class ServicesModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/services.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { TokenService } from '../index';\n\n@Injectable()\nexport class HttpBaseService {\n  //public apiUrl: string = 'http://dielle002:53434/reports/api/';\n  public apiUrl: string = 'http://localhost:5000/api/';\n  //public apiUrl: string = 'http://192.168.0.35:53434/api/';\n  protected options: RequestOptions;\n\n  protected token: string;\n\n  constructor(private tokenService: TokenService) {\n    this.setToken();\n    this.buildRequestOptions();\n\n    this.tokenService.tokenObservable.subscribe(\n      token => {\n        if (!!token) {\n          this.token = token;\n          this.buildRequestOptions();\n        }\n      }\n    );\n  }\n\n  setToken() {\n    try {\n      this.token = this.tokenService.retrieveToken();\n    } catch (e) { }\n  }\n\n  protected handleError(error: Response | any) {\n    try {\n      this.tokenService.tokenExpired();\n    } catch(e) {\n    }\n\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n  private buildRequestOptions(): void {\n    let headers: Headers = new Headers();\n    headers.append('Content-Type', 'application/json; charset=utf-8');\n    headers.append('Authorization', 'Bearer ' + this.token);\n\n    this.options = new RequestOptions({\n      headers: headers\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/http/http-base.service.ts","import { Injectable } from '@angular/core';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Injectable()\nexport class ToastService {\n  public options: any = {\n    timeOut: 3000,\n    showProgressBar: false,\n    lastOnBottom: false\n  }\n  private successTitle: string = 'Successo!';\n  private errorTitle: string = 'Errore!';\n\n  constructor(private notificationsService: NotificationsService) { }\n\n\n  public subjectCreated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'La creazione è andata a buon fine.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la creazione del soggetto.', this.options);\n    }\n  }\n\n  public subjectUpdated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'Il soggetto è stato modificato correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la modifica del soggetto.', this.options);\n    }\n  }\n\n  public subjectDeleted(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'Il soggetto è stato rimosso correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la rimozione del soggetto.', this.options);\n    }\n  }\n\n\n  public jobCreated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'La creazione della commessa è andata a buon fine.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la creazione della commessa.', this.options);\n    }\n  }\n\n  public jobDeleted(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'La commessa è stata rimossa correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la rimozione della commessa.', this.options);\n    }\n  }\n\n  public jobUpdated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'La commessa è stata modificata correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la modifica della commessa.', this.options);\n    }\n  }\n\n  public taskCreated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'La creazione del task è andata a buon fine.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la creazione del task.', this.options);\n    }\n  }\n\n  public taskDeleted(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'Il task è stato rimosso correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la rimozione del task.', this.options);\n    }\n  }\n\n  public taskUpdated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'Il task è stato modificato correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la modifica del task.', this.options);\n    }\n  }\n\n  public activityCreated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'La creazione dell\\'attività è andata a buon fine.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la creazione dell\\'attività.', this.options);\n    }\n  }\n\n  public activityDeleted(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'L\\'attività è stata rimossa correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la rimozione dell\\'attività.', this.options);\n    }\n  }\n\n  public loginSuccess(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'L\\'accesso è stato eseguito correttamente correttamente.', this.options);\n    } else {\n      this.notificationsService.error('Accesso fallito!',\n        'Riprova o contatta un amministratore.', this.options);\n    }\n  }\n\n  public typeDeleted(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'Il tipo è stato rimosso correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la rimozione del tipo.', this.options);\n    }\n  }\n\n  public typeUpdated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'Il tipo è stato modificato correttamente.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la modifica del tipo.', this.options);\n    }\n  }\n\n  public typeCreated(success: boolean) {\n    if (success) {\n      this.notificationsService.success(this.successTitle,\n        'La creazione del tipo è andata a buon fine.', this.options);\n    } else {\n      this.notificationsService.error(this.errorTitle,\n        'Un errore ha interrotto la creazione del tipo.', this.options);\n    }\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/toast.service.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable()\nexport class TokenService {\n  private tokenKey: string = 'rep_token';\n  public tokenObservable: Subject<string> = new BehaviorSubject<string>(null);\n\n  constructor() { }\n\n  storeToken(content) {\n    localStorage.setItem(this.tokenKey, JSON.stringify(content));\n    this.tokenObservable.next(content.access_token);\n  }\n\n  retrieveToken() {\n    let storedToken: string = localStorage.getItem(this.tokenKey);\n    if (!storedToken) {\n      throw new Error('token not found');\n    }\n    return JSON.parse(storedToken).access_token;\n  }\n\n  removeToken() {\n    localStorage.clear();\n  }\n\n  getTokenPayload() {\n    let token = this.retrieveToken();\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace('-', '+').replace('_', '/');\n    return JSON.parse(window.atob(base64));\n  };\n\n  tokenExpired() {\n    let payload = this.getTokenPayload();\n\n    if(payload.exp < Date.now()/1000) {\n      this.removeToken();\n      throw Error('token expired');\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/token.service.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { SidebarToggleService } from './sidebar-toggle.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    SidebarComponent,\n  ],\n  exports: [\n    SidebarComponent,\n  ],\n  providers: [\n    SidebarToggleService\n  ]\n\n})\nexport class SharedModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/shared.module.ts","import { Component, OnInit } from '@angular/core';\n\nimport { SidebarToggleService } from '../sidebar-toggle.service';\nimport { LoginService } from '../services';\n\n@Component({\n  selector: 'rep-sidebar',\n  templateUrl: './sidebar.component.html'\n})\nexport class SidebarComponent implements OnInit {\n  private toggled : boolean;\n\n  constructor(\n    private toggleService: SidebarToggleService,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit() {\n    this.toggleService.isToggled().subscribe((toggled: boolean) =>{\n      this.toggled = toggled;\n    });\n  }\n\n  logout() {\n    this.loginService.logout();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/sidebar/sidebar.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import {\n  serialize,\n  classToPlain,\n  classToClass\n} from 'class-transformer';\n\nexport abstract class Base {\n  public toJson(): string {\n    return serialize(this);\n  }\n\n  public toObject(): any {\n    return classToPlain(this);\n  }\n\n  public clone(): Base {\n    return classToClass(this, {'ignoreDecorators': true});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/base.ts","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 483\n// module chunks = 1","module.exports = \"<rep-sidebar></rep-sidebar>\\n\\n<div class=\\\"main-section\\\" [ngClass]=\\\"{'toggle-in': !!toggled, 'toggle-out': (!toggled && toggled!=null)}\\\">\\n\\n  <div class=\\\"title-bar hide-for-large sidebar-toggle\\\">\\n    <div class=\\\"title-bar-left\\\">\\n      <button class=\\\"menu-icon\\\" type=\\\"button\\\" (click)=\\\"toggle()\\\"></button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"main-section-content off-canvas-content\\\" (click)=\\\"toggled ? toggle(): 0\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = 484\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"medium-6 medium-centered large-4 large-centered columns\\\">\\n\\n    <form class=\\\"log-in-form\\\">\\n      <div class=\\\"row column\\\">\\n        <h4 class=\\\"text-center\\\">Login</h4>\\n        <label>Nome utente\\n          <input type=\\\"text\\\" placeholder=\\\"Username\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" (keyup.enter)=\\\"login()\\\">\\n        </label>\\n        <label>Password\\n          <input type=\\\"{{inputType}}\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" (keyup.enter)=\\\"login()\\\">\\n        </label>\\n        <input id=\\\"show-password\\\" type=\\\"checkbox\\\" (click)=\\\"toggleInputType()\\\">\\n        <label for=\\\"show-password\\\">Mostra password</label>\\n        <p><a type=\\\"submit\\\" class=\\\"button primary expanded\\\" (click)=\\\"login()\\\">Accedi</a></p>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n<simple-notifications [options]=\\\"{position: ['top', 'right']}\\\"></simple-notifications>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/login/login.component.html\n// module id = 485\n// module chunks = 1","module.exports = \"<div class=\\\"row large-6\\\">\\n  <label>Soggetto\\n    <select [ngModel]=\\\"selectedEmployee\\\" (ngModelChange)=\\\"employeeChanged($event)\\\">\\n        <option *ngFor=\\\"let subject of subjects | subjectFilter:'salaried'\\\" [ngValue]=\\\"subject\\\">{{subject.FirstName}}</option>\\n    </select>\\n  </label>\\n</div>\\n<br>\\n<div class=\\\"row large-10 column\\\">\\n  <rep-calendar (dayChanged)=\\\"dayChanged($event)\\\" (monthChanged)=\\\"monthChanged($event)\\\"></rep-calendar>\\n</div>\\n<br>\\n<div class=\\\"row\\\" *ngIf=\\\"this.selectedDay\\\">\\n  <div class=\\\"large-5 large-offset-1 column\\\">\\n    <h4 class=\\\"row\\\">Attività del {{selectedDay | date:'d/MM'}}</h4>\\n    <ul class=\\\"row main-list\\\">\\n      <p *ngIf=\\\"emptyActivities()\\\">Nessuna attività per questo giorno.</p>\\n      <li *ngFor=\\\"let activity of activities; let i = index\\\">\\n        <div *ngIf=\\\"isSelectedDay(activity.Date)\\\">\\n          <a class=\\\"sub-item-delete\\\" (click)=\\\"deleteActivityClick(activity, i)\\\"><i class=\\\"fi-x\\\"></i></a>\\n          <a>\\n            {{activity.Description}} - {{activity.WorkedHours}}h\\n            <span class=\\\"item-description\\\">\\n              {{activity.JobCode}} - {{activity.JobDescription}}\\n              <span *ngIf=\\\"activity.TaskCode\\\">\\n                >\\n                {{activity.TaskCode}} - {{activity.TaskDescription}}\\n              </span>\\n            </span>\\n          </a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"large-4 large-offset-1 column\\\">\\n    <form ngNoForm>\\n      <h4 class=\\\"row\\\">Aggiungi Attività</h4>\\n      <div class=\\\"row\\\">\\n        <label>Cliente\\n          <select [ngModel]=\\\"selectedClient\\\" (ngModelChange)=\\\"clientChanged($event)\\\">\\n              <option *ngFor=\\\"let subject of subjects | subjectFilter:'clients'\\\" [ngValue]=\\\"subject\\\">{{subject.BusinessName}}</option>\\n          </select>\\n        </label>\\n        <label>Commessa\\n          <select [(ngModel)]=\\\"this.selectedJob\\\" (ngModelChange)=\\\"jobChanged($event)\\\">\\n              <option *ngFor=\\\"let job of jobs\\\" [ngValue]=\\\"job\\\">{{job.Code}} - {{job.Description}}</option>\\n          </select>\\n        </label>\\n        <label *ngIf=\\\"selectedJob?.Tasks.length\\\">Task\\n          <select [(ngModel)]=\\\"selectedTask\\\" (ngModelChange)=\\\"taskChanged($event)\\\">\\n            <option value=\\\"undefined\\\" selected>Nessuno</option>\\n              <option *ngFor=\\\"let task of selectedJob.Tasks\\\" [ngValue]=\\\"task\\\">{{task.Code}} - {{task.Description}}</option>\\n          </select>\\n        </label>\\n        <label *ngIf=\\\"selectedTask?.Subtasks?.length\\\">Sotto task\\n          <select [(ngModel)]=\\\"selectedSubtask\\\" (ngModelChange)=\\\"subtaskChanged($event)\\\">\\n              <option value=\\\"undefined\\\" selected>Nessuno</option>\\n              <option *ngFor=\\\"let subtask of selectedTask.Subtasks\\\" [ngValue]=\\\"subtask\\\">{{subtask.Code}} - {{subtask.Description}}</option>\\n          </select>\\n        </label>\\n        <label>Tipo\\n          <select [(ngModel)]=\\\"newActivity.ActivityType\\\" name=\\\"type\\\">\\n              <option *ngFor=\\\"let type of activityTypes\\\" [ngValue]=\\\"type.Id\\\">{{type.Name}}</option>\\n          </select>\\n        </label>\\n        <label>Descrizione\\n          <input type=\\\"text\\\" name=\\\"code\\\" placeholder=\\\"Es. Bordo macchina\\\" [(ngModel)]=\\\"newActivity.Description\\\">\\n        </label>\\n        <label>Ore\\n          <input type=\\\"text\\\" name=\\\"description\\\" placeholder=\\\"Es. 8\\\" [(ngModel)]=\\\"newActivity.WorkedHours\\\">\\n        </label>\\n      </div>\\n      <div class=\\\"row submit-button\\\">\\n        <p>\\n          <a type=\\\"submit\\\" class=\\\"button primary\\\" (click)=\\\"createActivityClick()\\\">\\n            Crea attività\\n          </a>\\n        </p>\\n        <div class=\\\"callout alert\\\" *ngIf=\\\"(!newActivity.Description || !newActivity.Code) && errors.forms.createActivity.emptyFields\\\">\\n          <p>Uno o più campi non inseriti.</p>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"large-1\\\"></div>\\n  <simple-notifications [options]=\\\"{position: ['top', 'right']}\\\"></simple-notifications>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/activities/activities.component.html\n// module id = 486\n// module chunks = 1","module.exports = \"<div class=\\\"calendar-header-wrapper row\\\">\\n  <div class=\\\"calendar-header\\\">\\n    <a class=\\\"month-arrow\\\" (click)=\\\"decrementMonth()\\\"><img src=\\\"./assets/icons/back_arrow_2.png\\\" alt=\\\"\\\"></a>\\n    <h5>{{ viewDate | calendarDate:(view + 'ViewTitle'):'it' }}</h5>\\n    <a class=\\\"month-arrow reverse\\\" (click)=\\\"incrementMonth()\\\"><img src=\\\"./assets/icons/back_arrow_2.png\\\" alt=\\\"\\\"></a>\\n  </div>\\n</div>\\n\\n<ng-template #loading>\\n  <div class=\\\"text-center\\\">\\n    Loading events...\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"row\\\">\\n  <mwl-calendar-month-view\\n    [viewDate]=\\\"viewDate\\\"\\n    [locale]=\\\"locale\\\"\\n    [weekStartsOn]=\\\"weekStartsOn\\\"\\n    [dayModifier]=\\\"addBadgeTotal\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (dayClicked)=\\\"dayClicked($event.day)\\\">\\n  </mwl-calendar-month-view>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/activities/calendar/calendar.component.html\n// module id = 487\n// module chunks = 1","module.exports = \"<div class=\\\"row large-6\\\">\\n  <label>Soggetto\\n    <select [(ngModel)]=\\\"selectedEmployee\\\" (ngModelChange)=\\\"getActivities($event)\\\">\\n        <option *ngFor=\\\"let subject of subjects | subjectFilter:'salaried'\\\" [ngValue]=\\\"subject\\\">{{subject.FirstName}}</option>\\n    </select>\\n  </label>\\n</div>\\n\\n\\n<div class=\\\"row adjusted-top\\\">\\n  <div class=\\\"medium-3 columns\\\">\\n    <label>Data\\n      <input type=\\\"date\\\" #firstInput tabindex=\\\"1\\\" placeholder=\\\"Es. 040717\\\" [ngModel]=\\\"dateTyped\\\" (ngModelChange)=\\\"dateChanged($event)\\\" (keyup.enter)=\\\"createActivityClick()\\\">\\n    </label>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"medium-3 columns\\\">\\n    <label>Cliente\\n        <select tabindex=\\\"2\\\" [(ngModel)]=\\\"selectedClient\\\" (ngModelChange)=\\\"clientChanged($event)\\\" (keyup.enter)=\\\"createActivityClick()\\\">\\n            <option *ngFor=\\\"let subject of subjects | subjectFilter:'employers'\\\" [ngValue]=\\\"subject\\\">{{subject.BusinessName}}</option>\\n        </select>\\n      </label>\\n  </div>\\n  <div class=\\\"medium-3 columns\\\">\\n    <label>Commessa\\n        <select tabindex=\\\"3\\\" [(ngModel)]=\\\"selectedJob\\\" (ngModelChange)=\\\"jobChanged($event)\\\" (keyup.enter)=\\\"createActivityClick()\\\">\\n            <option *ngFor=\\\"let job of jobs\\\" [ngValue]=\\\"job\\\">{{job.Code}} - {{job.Description}}</option>\\n        </select>\\n      </label>\\n  </div>\\n  <div class=\\\"medium-3 columns\\\">\\n    <label *ngIf=\\\"selectedJob?.Tasks.length\\\">Task\\n        <select tabindex=\\\"4\\\" [(ngModel)]=\\\"selectedTask\\\" (ngModelChange)=\\\"taskChanged($event)\\\" (keyup.enter)=\\\"createActivityClick()\\\">\\n          <option value=\\\"undefined\\\" selected>Nessuno</option>\\n            <option *ngFor=\\\"let task of selectedJob.Tasks\\\" [ngValue]=\\\"task\\\">{{task.Code}} - {{task.Description}}</option>\\n        </select>\\n      </label>\\n  </div>\\n  <div class=\\\"medium-3 columns\\\">\\n    <label *ngIf=\\\"selectedTask?.Subtasks?.length\\\">Sotto task\\n        <select tabindex=\\\"4\\\" [(ngModel)]=\\\"selectedSubtask\\\" (ngModelChange)=\\\"subtaskChanged($event)\\\" (keyup.enter)=\\\"createActivityClick()\\\">\\n            <option value=\\\"undefined\\\" selected>Nessuno</option>\\n            <option *ngFor=\\\"let subtask of selectedTask.Subtasks\\\" [ngValue]=\\\"subtask\\\">{{subtask.Code}} - {{subtask.Description}}</option>\\n        </select>\\n      </label>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"medium-3 columns\\\">\\n    <label>Attività\\n        <select tabindex=\\\"5\\\" [(ngModel)]=\\\"selectedActivityType\\\" (ngModelChange)=\\\"activityTypeChanged($event)\\\" (keyup.enter)=\\\"createActivityClick()\\\">\\n            <option *ngFor=\\\"let activityType of activityTypes\\\" [ngValue]=\\\"activityType\\\">{{activityType.Name}}</option>\\n        </select>\\n      </label>\\n  </div>\\n  <div class=\\\"medium-3 columns\\\">\\n    <label>Ore\\n      <input tabindex=\\\"6\\\" type=\\\"text\\\" placeholder=\\\"Es. 8\\\" [(ngModel)]=\\\"newActivity.WorkedHours\\\" (keyup.enter)=\\\"createActivityClick()\\\">\\n    </label>\\n  </div>\\n  <div class=\\\"submit-button insert medium-6 columns\\\">\\n    <p>\\n      <a tabindex=\\\"7\\\" type=\\\"submit\\\" class=\\\"button primary\\\" (click)=\\\"createActivityClick()\\\" (keyup.enter)=\\\"createActivityClick()\\\" (keydown.Tab)=\\\"createActivityTab($event)\\\">\\n        Crea attività\\n      </a>\\n    </p>\\n  </div>\\n  <div class=\\\"medium-12 columns\\\">\\n    <div class=\\\"callout alert\\\" *ngIf=\\\"(!newActivity.ActivityType || !newActivity.Code) && errors.forms.createActivity.emptyFields\\\">\\n      <p>Uno o più campi non inseriti.</p>\\n    </div>\\n  </div>\\n</div>\\n\\n<br>\\n<br>\\n\\n<div class=\\\"row medium-9 column\\\">\\n  <h4>Lista attività</h4>\\n  <p *ngIf=\\\"!this.activities.length\\\">Nessuna attività presente.</p>\\n  <div *ngIf=\\\"this.activities.length\\\" class=\\\"activities-container\\\">\\n    <div class=\\\"row\\\">\\n      <h5 class=\\\"large-2 column\\\">Data</h5>\\n      <h5 class=\\\"large-6 column\\\">Commessa/Task</h5>\\n      <h5 class=\\\"large-4 column\\\">Attività</h5>\\n    </div>\\n\\n    <ul class=\\\"main-list activities\\\">\\n      <li *ngFor=\\\"let activity of activities | orderBy : 'Date' : true\\\" class=\\\"row\\\">\\n        <span class=\\\"large-2 column date\\\">{{activity.Date | date: 'dd/MM/yyyy'}}</span>\\n        <span class=\\\"large-6 column job\\\">\\n          {{activity.JobCode}} {{activity.JobDescription}}\\n          <span class=\\\"task\\\" *ngIf=\\\"activity.TaskCode\\\">\\n            - {{activity.TaskCode}} {{activity.TaskDescription}}\\n          </span>\\n        </span>\\n        <span class=\\\"large-4 column activity\\\">{{activity.Description}} -\\n          <span class=\\\"hours\\\">{{activity.WorkedHours}}h</span>\\n        </span>\\n      </li>\\n    </ul>\\n  </div>\\n\\n</div>\\n\\n\\n<simple-notifications [options]=\\\"{position: ['top', 'right']}\\\"></simple-notifications>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/insert/insert.component.html\n// module id = 488\n// module chunks = 1","module.exports = \"<div class=\\\"row large-6\\\">\\n  <label>Cliente\\n    <select [ngModel]=\\\"selectedClient\\\" (ngModelChange)=\\\"clientChanged($event)\\\">\\n        <option *ngFor=\\\"let subject of subjects | subjectFilter:'clients'\\\" [ngValue]=\\\"subject\\\">{{subject.BusinessName}}</option>\\n    </select>\\n  </label>\\n</div>\\n<br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"large-5 large-offset-1 column\\\">\\n    <h4 class=\\\"row\\\">Commesse {{selectedClient.BusinessName}}</h4>\\n    <ul class=\\\"row main-list\\\">\\n      <li *ngFor=\\\"let job of jobs\\\">\\n        <div *ngIf=\\\"job.ClientId == selectedClient.Id\\\" (click)=\\\"return\\\">\\n          <a (click)=\\\"goToEditJob(job)\\\">{{job.Code}} - {{job.Description}}</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"large-4 large-offset-1 column\\\">\\n    <form ngNoForm>\\n      <h4 class=\\\"row\\\">Aggiungi Commessa</h4>\\n      <div class=\\\"row\\\">\\n        <label>Codice\\n          <input type=\\\"text\\\" placeholder=\\\"Es. F1483\\\" [(ngModel)]=\\\"newJob.Code\\\">\\n        </label>\\n        <label>Descrizione\\n          <input type=\\\"text\\\" placeholder=\\\"Es. Linea produzione corn flakes\\\" [(ngModel)]=\\\"newJob.Description\\\">\\n        </label>\\n        <label>Tipo\\n          <select [(ngModel)]=\\\"newJob.TypeId\\\">\\n              <option *ngFor=\\\"let type of jobTypes\\\" [ngValue]=\\\"type.Id\\\">{{type.Code}} - {{type.Name}}</option>\\n          </select>\\n        </label>\\n        <label>Appaltatore\\n          <select [(ngModel)]=\\\"newJob.ContractingPartyId\\\">\\n              <option *ngFor=\\\"let subject of subjects | subjectFilter:'contracting_parties'\\\" [ngValue]=\\\"subject.Id\\\">{{subject.BusinessName}}</option>\\n          </select>\\n        </label>\\n      </div>\\n      <div class=\\\"row submit-button\\\">\\n        <p>\\n          <a type=\\\"submit\\\" class=\\\"button primary\\\" (click)=\\\"createJobClick()\\\">\\n            Crea commessa\\n          </a>\\n        </p>\\n        <div class=\\\"callout alert\\\" *ngIf=\\\"errors.forms.createJob.codeRequired && !newJob.Code\\\">\\n          <p>Codice commessa non inserito.</p>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"large-1\\\"></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/jobs/jobs.component.html\n// module id = 489\n// module chunks = 1","module.exports = \"<div>\\n  <a class=\\\"button-back\\\" (click)=\\\"goBack()\\\"><img src=\\\"./assets/icons/back_arrow.png\\\" alt=\\\"\\\"></a>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"large-5 large-offset-1 column\\\">\\n      <div class=\\\"row\\\">\\n        <h4>Commessa {{job.Code}}</h4>\\n      </div>\\n      <form ngNoForm>\\n        <div class=\\\"row\\\">\\n          <label>Codice\\n            <input type=\\\"text\\\" placeholder=\\\"Es. F1483\\\" [(ngModel)]=\\\"job.Code\\\" (ngModelChange)=\\\"errors.forms.updateJob.codeRequired=false\\\">\\n          </label>\\n          <label>Descrizione\\n            <input type=\\\"text\\\" placeholder=\\\"Es. Linea produzione corn flakes\\\" [(ngModel)]=\\\"job.Description\\\">\\n          </label>\\n          <label>Tipo\\n            <select [(ngModel)]=\\\"job.TypeId\\\">\\n                <option *ngFor=\\\"let type of jobTypes\\\" [ngValue]=\\\"type.Id\\\">{{type.Code}} - {{type.Name}}</option>\\n            </select>\\n          </label>\\n          <label>Appaltatore\\n            <select [(ngModel)]=\\\"job.ContractingPartyId\\\">\\n                <option *ngFor=\\\"let subject of subjects | subjectFilter:'contracting_parties'\\\" [ngValue]=\\\"subject.Id\\\">{{subject.BusinessName}}</option>\\n            </select>\\n          </label>\\n          <label>\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"job.IsActive\\\">\\n            Attiva\\n          </label>\\n        </div>\\n        <div class=\\\"row submit-button\\\">\\n          <p>\\n            <a type=\\\"submit\\\" class=\\\"button primary\\\" (click)=\\\"updateJobClick()\\\">\\n              Applica modifiche\\n            </a>\\n            <a type=\\\"submit\\\" class=\\\"button delete\\\" (click)=\\\"deleteJobClick()\\\">\\n              Rimuovi commessa\\n            </a>\\n          </p>\\n          <div class=\\\"callout alert\\\" *ngIf=\\\"errors.forms.updateJob.codeRequired && !job.Code\\\">\\n            <p>Codice commessa non inserito.</p>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"large-4 large-offset-1 column\\\">\\n      <form ngNoForm>\\n        <h4 class=\\\"row\\\">Aggiungi Task</h4>\\n        <div class=\\\"row\\\">\\n          <label>Codice\\n            <input type=\\\"text\\\" placeholder=\\\"Es. FC\\\" [(ngModel)]=\\\"newTask.Code\\\" (ngModelChange)=\\\"showErrors=false\\\">\\n          </label>\\n          <label>Descrizione\\n            <input type=\\\"text\\\" placeholder=\\\"Es. Fioccatore\\\" [(ngModel)]=\\\"newTask.Description\\\">\\n          </label>\\n          <label>Tipo\\n            <select [(ngModel)]=\\\"newTask.TypeId\\\">\\n                <option *ngFor=\\\"let type of taskTypes\\\" [ngValue]=\\\"type.Id\\\">{{type.Code}} - {{type.Name}}</option>\\n            </select>\\n          </label>\\n        </div>\\n        <div class=\\\"row submit-button\\\">\\n          <p>\\n            <a type=\\\"submit\\\" class=\\\"button primary\\\" (click)=\\\"createTaskClick()\\\">\\n              Aggiungi task\\n            </a>\\n          </p>\\n          <div class=\\\"callout alert\\\" *ngIf=\\\"errors.forms.createTask.codeRequired && !newTask.Code\\\">\\n            <p>Codice task non inserito.</p>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"large-1 column\\\"></div>\\n  </div>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"large-5 large-offset-1 column\\\">\\n      <h4 class=\\\"row\\\">Lista Task</h4>\\n      <p class=\\\"subheader row\\\" *ngIf=\\\"!job.Tasks.length\\\">Nessun task inserito in questa commessa</p>\\n      <div class=\\\"row\\\" *ngFor=\\\"let task of job.Tasks; let i = index\\\">\\n        <div class=\\\"sub-item-compact\\\" *ngIf=\\\"!task.IsDeleted\\\">\\n          <a class=\\\"sub-item-delete\\\" (click)=\\\"deleteTaskClick(task)\\\"><i class=\\\"fi-x\\\"></i></a>\\n          <a (click)=\\\"editTaskIndex = i; editTaskOpen = true\\\">{{task.Code}} - {{task.Description}}</a>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"large-4 large-offset-1 column\\\">\\n      <form ngNoForm *ngIf=\\\"editTaskOpen\\\">\\n        <h4 class=\\\"row\\\">Modifica Task</h4>\\n        <div class=\\\"row\\\">\\n          <label>Codice\\n            <input type=\\\"text\\\" placeholder=\\\"Es. FC\\\" [(ngModel)]=\\\"job.Tasks[editTaskIndex].Code\\\" (ngModelChange)=\\\"showErrors=false\\\">\\n          </label>\\n          <label>Descrizione\\n            <input type=\\\"text\\\" placeholder=\\\"Es. Fioccatore\\\" [(ngModel)]=\\\"job.Tasks[editTaskIndex].Description\\\">\\n          </label>\\n          <label>Tipo\\n            <select [(ngModel)]=\\\"job.Tasks[editTaskIndex].TypeId\\\">\\n                <option *ngFor=\\\"let type of taskTypes\\\" [ngValue]=\\\"type.Id\\\">{{type.Code}} - {{type.Name}}</option>\\n            </select>\\n          </label>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <h5>Sotto Task</h5>\\n          <div *ngFor=\\\"let subtask of job.Tasks[editTaskIndex].Subtasks; let i = index\\\">\\n            <div *ngIf=\\\"!subtask.IsDeleted\\\">\\n              <div *ngIf=\\\"editSubtaskIndex != i\\\" class=\\\"sub-item-compact\\\">\\n                <a class=\\\"sub-item-delete\\\" (click)=\\\"deleteSubtaskClick(subtask)\\\"><i class=\\\"fi-x\\\"></i></a>\\n                <a (click)=\\\"editSubtaskIndex = i\\\">\\n                {{subtask.Code}} - {{subtask.Description}}\\n              </a>\\n              </div>\\n              <div *ngIf=\\\"editSubtaskIndex == i\\\" clas=\\\"form-site\\\">\\n                <label>Codice\\n                <input type=\\\"text\\\" placeholder=\\\"Es. FC\\\" [(ngModel)]=\\\"subtask.Code\\\" (ngModelChange)=\\\"showErrors=false\\\">\\n              </label>\\n                <label>Descrizione\\n                <input type=\\\"text\\\" placeholder=\\\"Es. Fioccatore\\\" [(ngModel)]=\\\"subtask.Description\\\">\\n              </label>\\n                <label>Tipo\\n                <select [(ngModel)]=\\\"subtask.TypeId\\\">\\n                    <option *ngFor=\\\"let type of taskTypes\\\" [ngValue]=\\\"type.Id\\\">{{type.Code}} - {{type.Name}}</option>\\n                </select>\\n              </label>\\n              </div>\\n            </div>\\n          </div>\\n          <a class=\\\"site-add\\\" (click)=\\\"addSubtaskClick()\\\"><i class=\\\"fi-plus\\\"></i> Aggiungi sotto task</a>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"large-1 column\\\"></div>\\n  </div>\\n\\n  <simple-notifications [options]=\\\"{position: ['top', 'right']}\\\"></simple-notifications>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/jobs/tasks/tasks.component.html\n// module id = 490\n// module chunks = 1","module.exports = \"<div class=\\\"large-6 large-offset-1 column\\\">\\n  <a class=\\\"button-back\\\" (click)=\\\"goBack()\\\"><img src=\\\"./assets/icons/back_arrow.png\\\" alt=\\\"\\\"></a>\\n  <rep-subject-form [edit]=\\\"true\\\"\\n    [subject]=\\\"this.subject\\\"\\n    [selectedType]=\\\"this.subject.Types[0]\\\"\\n    (subjectDeleted)=\\\"goBack()\\\">\\n  </rep-subject-form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/subjects/subject-edit/subject-edit.component.html\n// module id = 491\n// module chunks = 1","module.exports = \"<form>\\n  <h4 class=\\\"row\\\">{{edit ? 'Modifica' : 'Aggiungi'}} {{selectedType | translateSubjectType}}</h4>\\n  <div class=\\\"row\\\">\\n    <label>Nome\\n      <input type=\\\"text\\\" name=\\\"firstname\\\" placeholder=\\\"Es. Mario\\\" [(ngModel)]=\\\"subject.FirstName\\\">\\n    </label>\\n    <label>Cognome\\n      <input type=\\\"text\\\" name=\\\"lastname\\\" placeholder=\\\"Es. Rossi\\\" [(ngModel)]=\\\"subject.LastName\\\">\\n    </label>\\n    <label>Ragione Sociale\\n      <input type=\\\"text\\\" name=\\\"businessname\\\" placeholder=\\\"Es. Mario Rossi Inc\\\" [(ngModel)]=\\\"subject.BusinessName\\\">\\n    </label>\\n    <fieldset class=\\\"checkbox-list-fieldset\\\">\\n      <label>Categoria</label>\\n      <div class=\\\"checkbox-list-item\\\" *ngFor=\\\"let type of SUBJECT_TYPES\\\">\\n        <input id=\\\"{{type}}\\\" type=\\\"checkbox\\\" [checked]=\\\"subject.Types.indexOf(type) >= 0\\\" [disabled]=\\\"type==selectedType && !edit\\\" (change)=\\\"updateTypesArray(type, subject.Types, $event)\\\">\\n        <label for=\\\"{{type}}\\\">{{type | translateSubjectType}}</label>\\n      </div>\\n    </fieldset>\\n    <label>Codice Fiscale\\n      <input type=\\\"text\\\" name=\\\"tax\\\" placeholder=\\\"Es. BBZJDC78B54Z135S\\\" [(ngModel)]=\\\"subject.TaxCode\\\">\\n    </label>\\n    <label>Partita IVA\\n      <input type=\\\"text\\\" name=\\\"vat\\\" placeholder=\\\"Es. 02474770282\\\" [(ngModel)]=\\\"subject.VATNumber\\\">\\n    </label>\\n    <label>Quota Oraria\\n      <input type=\\\"text\\\" name=\\\"rate\\\" placeholder=\\\"Es. 20.0\\\" [(ngModel)]=\\\"subject.HourlyRate\\\">\\n    </label>\\n    <label>Datore di lavoro\\n      <select [ngModel]=\\\"subject.EmployerId\\\" name=\\\"employer\\\" (ngModelChange)=\\\"employerChanged($event)\\\">\\n          <option *ngFor=\\\"let subject of subjects | subjectFilter:'employer'\\\" [ngValue]=\\\"subject.Id\\\">{{subject.BusinessName}}</option>\\n      </select>\\n    </label>\\n    <label>\\n      <input type=\\\"checkbox\\\" name=\\\"isactive\\\" [(ngModel)]=\\\"subject.IsActive\\\">\\n      Attivo\\n    </label>\\n    <h5>Sedi</h5>\\n    <div *ngFor=\\\"let site of subject.Sites; let i = index\\\">\\n      <div *ngIf=\\\"openedSite!=i\\\" class=\\\"sub-item-compact\\\">\\n        <a class=\\\"sub-item-delete\\\" (click)=\\\"deleteSiteClick(i)\\\"><i class=\\\"fi-x\\\"></i></a>\\n        <a (click)=\\\"openedSite = i\\\">{{subject.Sites[i].SiteName}}</a>\\n      </div>\\n      <div *ngIf=\\\"openedSite==i\\\" clas=\\\"form-site\\\">\\n        <label>Nome\\n          <input type=\\\"text\\\" name=\\\"sitename\\\" placeholder=\\\"Es. Industry Castelfranco Magazzino\\\" [(ngModel)]=\\\"site.SiteName\\\">\\n        </label>\\n        <fieldset class=\\\"checkbox-list-fieldset\\\">\\n          <label>Tipologia sede</label>\\n          <div class=\\\"checkbox-list-item\\\" *ngFor=\\\"let type of SITE_TYPES\\\">\\n            <input id=\\\"{{type}}\\\" type=\\\"checkbox\\\" [checked]=\\\"site.TypesCodes.indexOf(type) >= 0\\\" (change)=\\\"updateTypesArray(type, site.TypesCodes, $event)\\\">\\n            <label for=\\\"{{type}}\\\">{{type | translateSiteType}}</label>\\n          </div>\\n        </fieldset>\\n        <label>Indirizzo\\n          <input type=\\\"text\\\" name=\\\"address\\\" placeholder=\\\"Es. Via Galieo Galilei\\\" [(ngModel)]=\\\"site.Address\\\">\\n        </label>\\n        <label>Numero Civico\\n          <input type=\\\"text\\\" name=\\\"number\\\" placeholder=\\\"Es. 1\\\" [(ngModel)]=\\\"site.Number\\\">\\n        </label>\\n        <label>Città\\n          <input type=\\\"text\\\" name=\\\"city\\\" placeholder=\\\"Es. Galliera Veneta\\\" [(ngModel)]=\\\"site.City\\\">\\n        </label>\\n        <label>Codice Postale\\n          <input type=\\\"text\\\" name=\\\"zip\\\" placeholder=\\\"Es. 35015\\\" [(ngModel)]=\\\"site.ZipCode\\\">\\n        </label>\\n        <label>Provincia\\n          <input type=\\\"text\\\" name=\\\"province\\\" placeholder=\\\"Es. Padova\\\" [(ngModel)]=\\\"site.Province\\\">\\n        </label>\\n        <label>Sigla paese\\n          <input type=\\\"text\\\" name=\\\"country\\\" placeholder=\\\"Es. IT\\\" [(ngModel)]=\\\"site.CountryId\\\">\\n        </label>\\n      </div>\\n    </div>\\n    <a class=\\\"site-add\\\" (click)=\\\"addSiteClick()\\\"><i class=\\\"fi-plus\\\"></i> Aggiungi sede</a>\\n  </div>\\n  <div class=\\\"row submit-button\\\">\\n    <p>\\n      <a type=\\\"submit\\\" class=\\\"button primary\\\" *ngIf=\\\"!edit\\\" (click)=\\\"createSubjectClick()\\\">\\n        Crea {{selectedType | translateSubjectType}}\\n      </a>\\n      <a type=\\\"submit\\\" class=\\\"button primary\\\" *ngIf=\\\"edit\\\" (click)=\\\"updateSubjectClick()\\\">\\n        Applica modifiche\\n      </a>\\n      <a type=\\\"submit\\\" class=\\\"button delete\\\" *ngIf=\\\"edit\\\" (click)=\\\"deleteSubjectClick()\\\">\\n        Rimuovi {{selectedType | translateSubjectType}}\\n      </a>\\n    </p>\\n  </div>\\n</form>\\n<simple-notifications [options]=\\\"{position: ['top', 'right']}\\\"></simple-notifications>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/subjects/subject-form/subject-form.component.html\n// module id = 492\n// module chunks = 1","module.exports = \"<div class=\\\"row subjects\\\">\\n  <div class=\\\"large-6 large-offset-3\\\">\\n    <div class=\\\"button-group expanded\\\">\\n      <a class=\\\"button primary\\\" (click)=\\\"selectedType='employee'\\\" [ngClass]=\\\"{'inverse': selectedType!='employee'}\\\">\\n        Dipendenti\\n      </a>\\n      <a class=\\\"button primary\\\" (click)=\\\"selectedType='client'\\\" [ngClass]=\\\"{'inverse': selectedType!='client'}\\\">\\n        Clienti\\n      </a>\\n      <a class=\\\"button primary\\\" (click)=\\\"selectedType='contractor'\\\" [ngClass]=\\\"{'inverse': selectedType!='contractor'}\\\">\\n        Terzisti\\n      </a>\\n      <a class=\\\"button primary\\\" (click)=\\\"selectedType='contracting_party'\\\" [ngClass]=\\\"{'inverse': selectedType!='contracting_party'}\\\">\\n        Appaltatori\\n      </a>\\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"large-5 large-offset-1 column\\\">\\n    <h4 class=\\\"row\\\">Lista {{selectedType | translateSubjectType:'plural'}}</h4>\\n    <ul class=\\\"row main-list\\\">\\n      <li *ngFor=\\\"let subject of subjects\\\">\\n        <div *ngIf=\\\"subject.Types.includes(selectedType)\\\" (click)=\\\"goToEditSubject(subject)\\\">\\n          <a *ngIf=\\\"subject.Types.includes('employee')\\\">\\n            {{subject.FirstName}} {{subject.LastName}}\\n          </a>\\n          <a *ngIf=\\\"!subject.Types.includes('employee')\\\">\\n            {{subject.BusinessName}}\\n          </a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"large-4 large-offset-1 column\\\">\\n    <rep-subject-form [selectedType]=\\\"selectedType\\\"\\n      (subjectCreated)=\\\"subjectCreated($event)\\\">\\n    </rep-subject-form>\\n  </div>\\n\\n  <div class=\\\"large-1\\\"></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/subjects/subjects.component.html\n// module id = 493\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"large-6 large-offset-3\\\">\\n    <div class=\\\"button-group expanded\\\">\\n      <a class=\\\"button primary\\\" (click)=\\\"elementChanged('job')\\\" [ngClass]=\\\"{'inverse': selectedType!='job'}\\\">\\n        Commesse\\n      </a>\\n      <a class=\\\"button primary\\\" (click)=\\\"elementChanged('task')\\\" [ngClass]=\\\"{'inverse': selectedType!='task'}\\\">\\n        Task\\n      </a>\\n      <a class=\\\"button primary\\\" (click)=\\\"elementChanged('activity')\\\" [ngClass]=\\\"{'inverse': selectedType!='activity'}\\\">\\n        Attività\\n      </a>\\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"large-5 large-offset-1 column\\\">\\n    <h4 class=\\\"row\\\">Lista tipi {{selectedType | translateJobElement:'plural'}}</h4>\\n    <ul class=\\\"row main-list\\\">\\n      <li *ngFor=\\\"let type of types; let i = index\\\">\\n        <a (click)=\\\"openEditClick(type); editTypeIndex = i\\\">\\n          <span *ngIf=\\\"selectedType!='activity'\\\">{{ type.Code }} - </span>{{type.Name}}\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"large-4 large-offset-1 column\\\">\\n    <form ngNoForm *ngIf=\\\"!editing\\\" (keyup.enter)=\\\"createTypeClick()\\\" onSubmit=\\\"return false;\\\">\\n      <h4 class=\\\"row\\\">Aggiungi tipo {{selectedType | translateJobElement}}</h4>\\n      <div class=\\\"row\\\">\\n        <label *ngIf=\\\"selectedType!='activity'\\\">Codice\\n          <input type=\\\"text\\\" placeholder=\\\"Codice tipo {{selectedType | translateJobElement}}\\\" [(ngModel)]=\\\"newType.Code\\\">\\n        </label>\\n        <label>Nome\\n          <input type=\\\"text\\\" placeholder=\\\"Nome tipo {{selectedType | translateJobElement}}\\\" [(ngModel)]=\\\"newType.Name\\\">\\n        </label>\\n      </div>\\n      <div class=\\\"row submit-button\\\">\\n        <p>\\n          <a class=\\\"button primary\\\" (click)=\\\"createTypeClick()\\\">\\n            Crea tipo\\n          </a>\\n        </p>\\n        <div class=\\\"callout alert\\\" *ngIf=\\\"errors.forms.createType.codeRequired\\\">\\n          <p>Uno o più campi non completi.</p>\\n        </div>\\n      </div>\\n    </form>\\n\\n    <form ngNoForm *ngIf=\\\"editing\\\" (keyup.enter)=\\\"createTypeClick()\\\" onSubmit=\\\"return false;\\\">\\n      <h4 class=\\\"row\\\">Modifica tipo {{selectedType | translateJobElement}}</h4>\\n      <div class=\\\"row\\\">\\n        <label *ngIf=\\\"selectedType!='activity'\\\">Codice\\n          <input type=\\\"text\\\" placeholder=\\\"Codice tipo {{selectedType | translateJobElement}}\\\" [(ngModel)]=\\\"newType.Code\\\">\\n        </label>\\n        <label>Nome\\n          <input type=\\\"text\\\" placeholder=\\\"Nome tipo {{selectedType | translateJobElement}}\\\" [(ngModel)]=\\\"newType.Name\\\">\\n        </label>\\n      </div>\\n      <div class=\\\"row submit-button\\\">\\n        <p>\\n          <a class=\\\"text-button noedit\\\" (click)=\\\"noEditClick()\\\">\\n            Annulla\\n          </a>\\n        </p>\\n        <p>\\n          <a class=\\\"button primary\\\" (click)=\\\"editTypeClick()\\\">\\n            Modifica tipo\\n          </a>\\n          <a type=\\\"submit\\\" class=\\\"button delete\\\" (click)=\\\"deleteTypeClick()\\\">\\n            Rimuovi tipo\\n          </a>\\n        </p>\\n        <div class=\\\"callout alert\\\" *ngIf=\\\"errors.forms.createType.codeRequired\\\">\\n          <p>Uno o più campi non completi.</p>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"large-1\\\"></div>\\n</div>\\n<simple-notifications [options]=\\\"{position: ['top', 'right']}\\\"></simple-notifications>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/pages/types/types.component.html\n// module id = 494\n// module chunks = 1","module.exports = \" <nav class=\\\"off-canvas position-left reveal-for-large side-bar\\\" [ngClass]=\\\"{'toggle-in': !!toggled, 'toggle-out': (!toggled && toggled!=null)}\\\">\\n    <div class=\\\"logo-container\\\">\\n      <img src=\\\"assets/icons/logo.png\\\" alt=\\\"\\\" class=\\\"logo\\\">\\n    </div>\\n    <br>\\n    <ul class=\\\"menu vertical\\\">\\n      <p class=\\\"menu-area-title\\\">Gestione entità</p>\\n      <li class=\\\"menu-item\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"/subjects\\\">Creazione soggetti</a></li>\\n      <li class=\\\"menu-item\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"/jobs\\\">Creazione commesse</a></li>\\n      <li class=\\\"menu-item\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"/types\\\">Creazione tipi</a></li>\\n      <br>\\n      <p class=\\\"menu-area-title\\\">Gestione ore</p>\\n      <li class=\\\"menu-item\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"/activities\\\">Inserimento Ore</a></li>\\n      <li class=\\\"menu-item\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"/insert\\\">Inserimento Rapido</a></li>\\n      <br>\\n      <p class=\\\"menu-area-title\\\"></p>\\n      <button class=\\\"text-button primary\\\" (click)=\\\"logout()\\\">Log Out</button>\\n    </ul>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/shared/sidebar/sidebar.component.html\n// module id = 495\n// module chunks = 1","export * from './error.service';\nexport * from './toast.service';\nexport * from './token.service';\nexport * from './http';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/services/index.ts","import { Component, OnInit } from '@angular/core';\n\nimport { SidebarToggleService } from './shared/sidebar-toggle.service';\n\n@Component({\n  selector: 'rep-dashboard',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit {\n  private toggled : boolean;\n\n  constructor(private toggleService: SidebarToggleService) { }\n\n  ngOnInit() {\n    this.toggleService.isToggled().subscribe(\n      (toggled: boolean) => this.toggled = toggled\n    );\n  }\n\n  toggle() {\n    this.toggleService.toggle();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SidebarToggleService {\n\n  private toggled : boolean = false;\n  private subject: Subject<boolean> = new Subject<boolean>();\n\n  constructor() { }\n\n  toggle(): void {\n    this.toggled = !this.toggled;\n    this.subject.next(this.toggled);\n  }\n\n  isToggled(): Observable<boolean> {\n    return this.subject.asObservable();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/sidebar-toggle.service.ts","export * from './base';\nexport * from './site';\nexport * from './subject';\nexport * from './job';\nexport * from './task';\nexport * from './activity';\nexport * from './job-type';\nexport * from './task-type';\nexport * from './activity-type';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/shared/model/index.ts"],"sourceRoot":""}